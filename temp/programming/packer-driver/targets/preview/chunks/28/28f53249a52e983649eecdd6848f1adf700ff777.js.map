{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Scripts/Player/PlayerMgr.ts"],"names":["Component","_decorator","Sprite","UITransform","Animation","SpriteAtlas","AnimationClip","animation","ENUM_EVENT","ENUM_MOVE","EventMgr","ResourceLoadMgr","TILE_HEIGHT","TILE_WIDTH","ANIMATION_SPEED","MOVE_SPEED","ccclass","property","PlayerMrg","x","y","tartgetX","tartgetY","init","loadRes","onLoad","Instance","addEventListen","ENUM_MOVE_PLAYER","handlerMove","onDestry","unEventListen","update","updateXY","node","setPosition","Math","abs","direction","TOP","BOTTOM","LEFT","RIGHT","TURNLEFT","TURNRIGHT","spriteAtlas","sprite","addComponent","sizeMode","SizeMode","CUSTOM","transform","getComponent","setContentSize","animationClip","animationCom","track","ObjectTrack","path","TrackPath","toComponent","toProperty","spFrames","spriteFrames","frams","index","key","Object","prototype","hasOwnProperty","call","element","push","console","log","channel","curve","assignSorted","addTrack","wrapMode","WrapMode","Loop","duration","length","defaultClip","play"],"mappings":"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","sourcesContent":["import { Component, _decorator, Node, Sprite, UITransform, Animation, SpriteAtlas, AnimationClip, animation, SpriteFrame, Texture2D, math } from \"cc\";\nimport { ENUM_EVENT, ENUM_MOVE } from \"../../Enum\";\nimport levels, { ILevel } from \"../../Levels\";\nimport EventMgr from \"../Base/EventMgr\";\nimport ResourceLoadMgr from \"../Base/ResourceLoadMgr\";\nimport DataManager from \"../Runtime/DataManager\";\nimport { TILE_HEIGHT, TILE_WIDTH } from \"../TileMap/TileManager\";\n// import { DataManager.Instance } from \"../Runtime/DataManager\";\nimport { TileMapManager } from \"../TileMap/TileMapManager\";\nimport { createNewNode } from \"../Utils\";\n\nconst ANIMATION_SPEED = 1 / 8\nconst MOVE_SPEED = 1 / 10\n\nconst { ccclass, property } = _decorator;\n@ccclass('PlayerMrg')\nexport class PlayerMrg extends Component {\n    x: number = 0\n    y: number = 0\n\n    tartgetX: number = 0\n    tartgetY: number = 0\n\n    async init() {\n        await this.loadRes()\n    }\n\n    onLoad() {\n        EventMgr.Instance.addEventListen(ENUM_EVENT.ENUM_MOVE_PLAYER, this.handlerMove, this)\n    }\n\n    onDestry() {\n        EventMgr.Instance.unEventListen(ENUM_EVENT.ENUM_MOVE_PLAYER, this.handlerMove)\n    }\n\n    update() {\n        this.updateXY()\n        this.node.setPosition(this.x * TILE_WIDTH - TILE_WIDTH * 1.5, -this.y * TILE_HEIGHT + TILE_HEIGHT * 1.5)\n    }\n\n    updateXY() {\n        if (this.tartgetX < this.x) {\n            this.x -= MOVE_SPEED\n        } else if (this.tartgetX > this.x) {\n            this.x += MOVE_SPEED\n        } else if (this.tartgetY < this.y) {\n            this.y -= MOVE_SPEED\n        } else if (this.tartgetY > this.y) {\n            this.y += MOVE_SPEED\n        }\n\n        if (Math.abs(this.tartgetX - this.x) <= 0.1 && Math.abs(this.tartgetY - this.y) <= 0.1) {\n            this.x = this.tartgetX\n            this.y = this.tartgetY\n        }\n    }\n\n    handlerMove(direction: ENUM_MOVE) {\n        switch (direction) {\n            case ENUM_MOVE.TOP:\n                this.tartgetY -= 1\n                break;\n            case ENUM_MOVE.BOTTOM:\n                this.tartgetY += 1\n                break;\n            case ENUM_MOVE.LEFT:\n                this.tartgetX -= 1\n                break;\n            case ENUM_MOVE.RIGHT:\n                this.tartgetX += 1\n                break;\n            case ENUM_MOVE.TURNLEFT:\n\n                break;\n            case ENUM_MOVE.TURNRIGHT:\n\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    async loadRes() {\n        const spriteAtlas = await ResourceLoadMgr.Instance.loadRes('texture/player/idle/top/idle', SpriteAtlas)\n        const sprite = this.addComponent(Sprite)\n        sprite.sizeMode = Sprite.SizeMode.CUSTOM\n        const transform = this.node.getComponent(UITransform)\n        transform.setContentSize(TILE_WIDTH * 4, TILE_HEIGHT * 4)\n\n        const animationClip = new AnimationClip();\n\n        const animationCom = this.addComponent(Animation)\n\n        const track = new animation.ObjectTrack(); // 创建一个对象轨道\n        track.path = new animation.TrackPath().toComponent(Sprite).toProperty('spriteFrame'); // 找子节点组件 以及属性\n\n        const spFrames = spriteAtlas.spriteFrames\n        const frams: Array<[number, SpriteFrame]> = []\n\n        let index = 0\n        for (const key in spFrames) {\n            if (Object.prototype.hasOwnProperty.call(spFrames, key)) {\n                const element = spFrames[key];\n                frams.push([ANIMATION_SPEED * index, element])\n                index++\n            }\n        }\n        console.log(frams)\n        track.channel.curve.assignSorted(frams)\n\n        // const frames: Array<[number, SpriteFrame]> = spFrames.map((item: SpriteFrame, index: number) => [ANIMATION_SPEED * index, item])\n\n        // // 最后将轨道添加到动画剪辑以应用\n        animationClip.addTrack(track)\n        animationClip.wrapMode = AnimationClip.WrapMode.Loop\n        animationClip.duration = frams.length * ANIMATION_SPEED; // 整个动画剪辑的周期\n\n        animationCom.defaultClip = animationClip\n        animationCom.play()\n    }\n}"]}