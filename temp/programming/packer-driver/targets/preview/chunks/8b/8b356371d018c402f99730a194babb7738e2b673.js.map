{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Scripts/Utils/index.ts"],"names":["Node","UITransform","Layers","createNewNode","name","node","transfrom","addComponent","setAnchorPoint","layer","nameToLayer","randomTileByrange","start","end","Math","floor","random","getNumByName","spname","reg","parseInt","match","sortSpriteFrame","spFrames","arr","key","push","sort","a","b"],"mappings":";;;;;;;;;;AAAgCA,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;;;;;;;;;+BACtCC,a,GAAgB,SAAhBA,aAAgB,CAACC,IAAD,EAAuB;AAAA,YAAtBA,IAAsB;AAAtBA,UAAAA,IAAsB,GAAP,EAAO;AAAA;;AAChD,YAAMC,IAAI,GAAG,IAAIL,IAAJ,EAAb;AACA,YAAMM,SAAS,GAAGD,IAAI,CAACE,YAAL,CAAkBN,WAAlB,CAAlB;AACAK,QAAAA,SAAS,CAACE,cAAV,CAAyB,CAAzB,EAA4B,CAA5B;AAEAH,QAAAA,IAAI,CAACI,KAAL,GAAa,KAAKP,MAAM,CAACQ,WAAP,CAAmB,OAAnB,CAAlB;AACA,eAAOL,IAAP;AACH,O;;mCAEYM,iB,GAAoB,CAACC,KAAD,EAAgBC,GAAhB,KAAgC;AAC7D,eAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,KAAK,IAAIC,GAAG,GAAGD,KAAV,CAAtB,CAAX,CAAP;AACH,O;;AAGKK,MAAAA,Y,GAAgBC,MAAD,IAAY;AAC7B,YAAMC,GAAG,GAAG,WAAZ;AACA,eAAOC,QAAQ,CAACF,MAAM,CAACG,KAAP,CAAaF,GAAb,EAAkB,CAAlB,CAAD,CAAR,IAAkC,CAAzC;AACH,O;;iCAEYG,e,GAAmBC,QAAD,IAAc;AACzC,YAAIC,GAAG,GAAG,EAAV;;AACA,aAAK,IAAMC,GAAX,IAAkBF,QAAlB,EAA4B;AACxBC,UAAAA,GAAG,CAACE,IAAJ,CAASD,GAAT;AACH;;AACD,eAAOD,GAAG,CAACG,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAUZ,YAAY,CAACW,CAAD,CAAZ,GAAkBX,YAAY,CAACY,CAAD,CAAjD,CAAP;AACH,O","sourcesContent":["import { Component, _decorator, Node, UITransform, Layers, SpriteFrame, math, sp } from \"cc\";\nexport const createNewNode = (name: string = '') => {\n    const node = new Node()\n    const transfrom = node.addComponent(UITransform)\n    transfrom.setAnchorPoint(0, 1)\n\n    node.layer = 1 << Layers.nameToLayer('UI_2D')\n    return node\n}\n\nexport const randomTileByrange = (start: number, end: number) => {\n    return Math.floor(Math.random() * (start + (end - start)))\n}\n\n\nconst getNumByName = (spname) => {\n    const reg = /\\((\\d+)\\)/\n    return parseInt(spname.match(reg)[1]) || 0\n}\n\nexport const sortSpriteFrame = (spFrames) => {\n    let arr = []\n    for (const key in spFrames) {\n        arr.push(key)\n    }\n    return arr.sort((a, b) => getNumByName(a) - getNumByName(b))\n}"]}