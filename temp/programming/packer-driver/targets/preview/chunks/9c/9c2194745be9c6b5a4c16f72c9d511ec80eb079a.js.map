{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Scripts/Player/PlayerMgr.ts"],"names":["_decorator","DIRECTION_ENUM","ENITIY_TYPE_ENUM","ENTITY_STATE_ENUM","ENUM_EVENT","ENUM_MOVE","EventMgr","PlayerStateMachine","EnitiyMgr","MOVE_SPEED","ccclass","property","PlayerMrg","tartgetX","tartgetY","init","fsm","addComponent","x","y","type","PLAYER","state","IDLE","direction","TOP","onLoad","Instance","addEventListen","ENUM_MOVE_PLAYER","handlerMove","onDestry","unEventListen","update","updateXY","Math","abs","BOTTOM","LEFT","RIGHT","TURNLEFT","TURNRIGHT"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAoBA,MAAAA,U,OAAAA,U;;AACXC,MAAAA,c,iBAAAA,c;AAAsCC,MAAAA,gB,iBAAAA,gB;AAAkBC,MAAAA,iB,iBAAAA,iB;AAAmBC,MAAAA,U,iBAAAA,U;AAAYC,MAAAA,S,iBAAAA,S;;AAEzFC,MAAAA,Q;;AAOEC,MAAAA,kB,iBAAAA,kB;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;;;4BAEIC,U,GAAa,IAAI,E;;OAExB;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;;2BAEjBY,S,WADZF,OAAO,CAAC,WAAD,C,gBAAR,MACaE,SADb;AAAA;AAAA,kCACyC;AAAA;AAAA;AAAA,eAErCC,QAFqC,GAElB,CAFkB;AAAA,eAGrCC,QAHqC,GAGlB,CAHkB;AAAA;;AAK/BC,QAAAA,IAAI,GAAG;AAAA;AAAA;;AAAA;AACT,YAAA,KAAI,CAACC,GAAL,GAAW,KAAI,CAACC,YAAL;AAAA;AAAA,yDAAX;AACA,kBAAM,KAAI,CAACD,GAAL,CAASD,IAAT,EAAN;;AAEA,6CAAW;AACPG,cAAAA,CAAC,EAAE,CADI;AAEPC,cAAAA,CAAC,EAAE,CAFI;AAGPC,cAAAA,IAAI,EAAE;AAAA;AAAA,wDAAiBC,MAHhB;AAIPC,cAAAA,KAAK,EAAE;AAAA;AAAA,0DAAkBC,IAJlB;AAKPC,cAAAA,SAAS,EAAE;AAAA;AAAA,oDAAeC;AALnB,aAAX;AAJS;AAWZ;;AAEDC,QAAAA,MAAM,GAAG;AACL;AAAA;AAAA,oCAASC,QAAT,CAAkBC,cAAlB,CAAiC;AAAA;AAAA,wCAAWC,gBAA5C,EAA8D,KAAKC,WAAnE,EAAgF,IAAhF;AACH;;AAEDC,QAAAA,QAAQ,GAAG;AACP;AAAA;AAAA,oCAASJ,QAAT,CAAkBK,aAAlB,CAAgC;AAAA;AAAA,wCAAWH,gBAA3C,EAA6D,KAAKC,WAAlE;AACH;;AAEDG,QAAAA,MAAM,GAAG;AACL,eAAKC,QAAL;AACA,gBAAMD,MAAN;AACH;;AAEDC,QAAAA,QAAQ,GAAG;AACP,cAAI,KAAKrB,QAAL,GAAgB,KAAKK,CAAzB,EAA4B;AACxB,iBAAKA,CAAL,IAAUT,UAAV;AACH,WAFD,MAEO,IAAI,KAAKI,QAAL,GAAgB,KAAKK,CAAzB,EAA4B;AAC/B,iBAAKA,CAAL,IAAUT,UAAV;AACH,WAFM,MAEA,IAAI,KAAKK,QAAL,GAAgB,KAAKK,CAAzB,EAA4B;AAC/B,iBAAKA,CAAL,IAAUV,UAAV;AACH,WAFM,MAEA,IAAI,KAAKK,QAAL,GAAgB,KAAKK,CAAzB,EAA4B;AAC/B,iBAAKA,CAAL,IAAUV,UAAV;AACH;;AAED,cAAI0B,IAAI,CAACC,GAAL,CAAS,KAAKvB,QAAL,GAAgB,KAAKK,CAA9B,KAAoC,GAApC,IAA2CiB,IAAI,CAACC,GAAL,CAAS,KAAKtB,QAAL,GAAgB,KAAKK,CAA9B,KAAoC,GAAnF,EAAwF;AACpF,iBAAKD,CAAL,GAAS,KAAKL,QAAd;AACA,iBAAKM,CAAL,GAAS,KAAKL,QAAd;AACH;AACJ;;AAEDgB,QAAAA,WAAW,CAACN,SAAD,EAAuB;AAC9B,kBAAQA,SAAR;AACI,iBAAK;AAAA;AAAA,wCAAUC,GAAf;AACI,mBAAKX,QAAL,IAAiB,CAAjB;AACA;;AACJ,iBAAK;AAAA;AAAA,wCAAUuB,MAAf;AACI,mBAAKvB,QAAL,IAAiB,CAAjB;AACA;;AACJ,iBAAK;AAAA;AAAA,wCAAUwB,IAAf;AACI,mBAAKzB,QAAL,IAAiB,CAAjB;AACA;;AACJ,iBAAK;AAAA;AAAA,wCAAU0B,KAAf;AACI,mBAAK1B,QAAL,IAAiB,CAAjB;AACA;;AACJ,iBAAK;AAAA;AAAA,wCAAU2B,QAAf;AACI;AAEA,kBAAI,KAAKhB,SAAL,KAAmB;AAAA;AAAA,oDAAeC,GAAtC,EAA2C;AACvC,qBAAKD,SAAL,GAAiB;AAAA;AAAA,sDAAec,IAAhC;AACH,eAFD,MAEO,IAAI,KAAKd,SAAL,KAAmB;AAAA;AAAA,oDAAea,MAAtC,EAA8C;AACjD,qBAAKb,SAAL,GAAiB;AAAA;AAAA,sDAAee,KAAhC;AACH,eAFM,MAEA,IAAI,KAAKf,SAAL,KAAmB;AAAA;AAAA,oDAAec,IAAtC,EAA4C;AAC/C,qBAAKd,SAAL,GAAiB;AAAA;AAAA,sDAAea,MAAhC;AACH,eAFM,MAEA,IAAI,KAAKb,SAAL,KAAmB;AAAA;AAAA,oDAAee,KAAtC,EAA6C;AAChD,qBAAKf,SAAL,GAAiB;AAAA;AAAA,sDAAeC,GAAhC;AACH;;AACD,mBAAKH,KAAL,GAAa;AAAA;AAAA,0DAAkBkB,QAA/B;AACA;;AACJ,iBAAK;AAAA;AAAA,wCAAUC,SAAf;AAEI;;AAEJ;AACI;AAhCR;AAkCH;;AAnFoC,O","sourcesContent":["import { Component, _decorator, Node, Sprite, UITransform, Animation, SpriteAtlas, AnimationClip, animation, SpriteFrame, Texture2D, math } from \"cc\";\nimport { DIRECTION_ENUM, DIRECTION_ORDER_ENUM, ENITIY_TYPE_ENUM, ENTITY_STATE_ENUM, ENUM_EVENT, ENUM_MOVE, PARAMS_NAME_TYPE } from \"../../Enum\";\nimport levels, { ILevel } from \"../../Levels\";\nimport EventMgr from \"../Base/EventMgr\";\nimport ResourceLoadMgr from \"../Base/ResourceLoadMgr\";\nimport DataManager from \"../Runtime/DataManager\";\nimport { TILE_HEIGHT, TILE_WIDTH } from \"../TileMap/TileManager\";\n// import { DataManager.Instance } from \"../Runtime/DataManager\";\nimport { TileMapManager } from \"../TileMap/TileMapManager\";\nimport { createNewNode } from \"../Utils\";\nimport { PlayerStateMachine } from \"../Base/PlayerStateMachine\";\nimport { EnitiyMgr } from \"../Base/EnitiyMgr\";\n\nexport const MOVE_SPEED = 1 / 10\n\nconst { ccclass, property } = _decorator;\n@ccclass('PlayerMrg')\nexport class PlayerMrg extends EnitiyMgr {\n\n    tartgetX: number = 0\n    tartgetY: number = 0\n\n    async init() {\n        this.fsm = this.addComponent(PlayerStateMachine)\n        await this.fsm.init()\n\n        super.init({\n            x: 0,\n            y: 0,\n            type: ENITIY_TYPE_ENUM.PLAYER,\n            state: ENTITY_STATE_ENUM.IDLE,\n            direction: DIRECTION_ENUM.TOP\n        })\n    }\n\n    onLoad() {\n        EventMgr.Instance.addEventListen(ENUM_EVENT.ENUM_MOVE_PLAYER, this.handlerMove, this)\n    }\n\n    onDestry() {\n        EventMgr.Instance.unEventListen(ENUM_EVENT.ENUM_MOVE_PLAYER, this.handlerMove)\n    }\n\n    update() {\n        this.updateXY()\n        super.update()\n    }\n\n    updateXY() {\n        if (this.tartgetX < this.x) {\n            this.x -= MOVE_SPEED\n        } else if (this.tartgetX > this.x) {\n            this.x += MOVE_SPEED\n        } else if (this.tartgetY < this.y) {\n            this.y -= MOVE_SPEED\n        } else if (this.tartgetY > this.y) {\n            this.y += MOVE_SPEED\n        }\n\n        if (Math.abs(this.tartgetX - this.x) <= 0.1 && Math.abs(this.tartgetY - this.y) <= 0.1) {\n            this.x = this.tartgetX\n            this.y = this.tartgetY\n        }\n    }\n\n    handlerMove(direction: ENUM_MOVE) {\n        switch (direction) {\n            case ENUM_MOVE.TOP:\n                this.tartgetY -= 1\n                break;\n            case ENUM_MOVE.BOTTOM:\n                this.tartgetY += 1\n                break;\n            case ENUM_MOVE.LEFT:\n                this.tartgetX -= 1\n                break;\n            case ENUM_MOVE.RIGHT:\n                this.tartgetX += 1\n                break;\n            case ENUM_MOVE.TURNLEFT:\n                // this.fsm.setParams(PARAMS_NAME_TYPE.TURNLEFT, true)\n\n                if (this.direction === DIRECTION_ENUM.TOP) {\n                    this.direction = DIRECTION_ENUM.LEFT\n                } else if (this.direction === DIRECTION_ENUM.BOTTOM) {\n                    this.direction = DIRECTION_ENUM.RIGHT\n                } else if (this.direction === DIRECTION_ENUM.LEFT) {\n                    this.direction = DIRECTION_ENUM.BOTTOM\n                } else if (this.direction === DIRECTION_ENUM.RIGHT) {\n                    this.direction = DIRECTION_ENUM.TOP\n                }\n                this.state = ENTITY_STATE_ENUM.TURNLEFT\n                break;\n            case ENUM_MOVE.TURNRIGHT:\n\n                break;\n\n            default:\n                break;\n        }\n    }\n}"]}