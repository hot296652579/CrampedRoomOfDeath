{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Scripts/Player/PlayerMgr.ts"],"names":["Component","_decorator","Sprite","UITransform","Animation","SpriteAtlas","AnimationClip","animation","ResourceLoadMgr","TILE_HEIGHT","TILE_WIDTH","ANIMATION_SPEED","ccclass","property","PlayerMrg","init","spriteAtlas","Instance","loadRes","sprite","addComponent","sizeMode","SizeMode","CUSTOM","transform","node","getComponent","setContentSize","animationClip","duration","animationCom","track","ObjectTrack","path","TrackPath","toComponent","toProperty","spFrames","spriteFrames","frams","index","key","Object","prototype","hasOwnProperty","call","element","push","console","log","channel","curve","assignSorted","addTrack","wrapMode","WrapMode","Loop","defaultClip","play"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,U,OAAAA,U;AAAkBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,a,OAAAA,a;AAAeC,MAAAA,S,OAAAA,S;;AAI3FC,MAAAA,e;;AAEEC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,U,iBAAAA,U;;;;;;;;;AAKhBC,MAAAA,e,GAAkB,IAAI,C;OAEtB;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U;;2BAEjBa,S,WADZF,OAAO,CAAC,WAAD,C,gBAAR,MACaE,SADb,SAC+Bd,SAD/B,CACyC;AAC/Be,QAAAA,IAAI,GAAG;AAAA;;AAAA;AACT,gBAAMC,WAAW,SAAS;AAAA;AAAA,oDAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,8BAAjC,EAAiEb,WAAjE,CAA1B;;AACA,gBAAMc,MAAM,GAAG,KAAI,CAACC,YAAL,CAAkBlB,MAAlB,CAAf;;AACAiB,YAAAA,MAAM,CAACE,QAAP,GAAkBnB,MAAM,CAACoB,QAAP,CAAgBC,MAAlC;;AACA,gBAAMC,SAAS,GAAG,KAAI,CAACC,IAAL,CAAUC,YAAV,CAAuBvB,WAAvB,CAAlB;;AACAqB,YAAAA,SAAS,CAACG,cAAV,CAAyB;AAAA;AAAA,4CAAa,CAAtC,EAAyC;AAAA;AAAA,8CAAc,CAAvD;AAEA,gBAAMC,aAAa,GAAG,IAAItB,aAAJ,EAAtB;AACAsB,YAAAA,aAAa,CAACC,QAAd,GAAyB,GAAzB,CARS,CAQqB;;AAE9B,gBAAMC,YAAY,GAAG,KAAI,CAACV,YAAL,CAAkBhB,SAAlB,CAArB;;AAEA,gBAAM2B,KAAK,GAAG,IAAIxB,SAAS,CAACyB,WAAd,EAAd,CAZS,CAYkC;;AAC3CD,YAAAA,KAAK,CAACE,IAAN,GAAa,IAAI1B,SAAS,CAAC2B,SAAd,GAA0BC,WAA1B,CAAsCjC,MAAtC,EAA8CkC,UAA9C,CAAyD,aAAzD,CAAb,CAbS,CAa6E;;AAEtF,gBAAMC,QAAQ,GAAGrB,WAAW,CAACsB,YAA7B;AACA,gBAAMC,KAAmC,GAAG,EAA5C;AAEA,gBAAIC,KAAK,GAAG,CAAZ;;AACA,iBAAK,IAAMC,GAAX,IAAkBJ,QAAlB,EAA4B;AACxB,kBAAIK,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,QAArC,EAA+CI,GAA/C,CAAJ,EAAyD;AACrD,oBAAMK,OAAO,GAAGT,QAAQ,CAACI,GAAD,CAAxB;AACAF,gBAAAA,KAAK,CAACQ,IAAN,CAAW,CAACpC,eAAe,GAAG6B,KAAnB,EAA0BM,OAA1B,CAAX;AACAN,gBAAAA,KAAK;AACR;AACJ;;AACDQ,YAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACAR,YAAAA,KAAK,CAACmB,OAAN,CAAcC,KAAd,CAAoBC,YAApB,CAAiCb,KAAjC,EA3BS,CA6BT;AAEA;;AACAX,YAAAA,aAAa,CAACyB,QAAd,CAAuBtB,KAAvB;AACAH,YAAAA,aAAa,CAAC0B,QAAd,GAAyBhD,aAAa,CAACiD,QAAd,CAAuBC,IAAhD;AAEA1B,YAAAA,YAAY,CAAC2B,WAAb,GAA2B7B,aAA3B;AACAE,YAAAA,YAAY,CAAC4B,IAAb;AApCS;AAqCZ;;AAtCoC,O","sourcesContent":["import { Component, _decorator, Node, Sprite, UITransform, Animation, SpriteAtlas, AnimationClip, animation, SpriteFrame, Texture2D } from \"cc\";\nimport { ENUM_EVENT } from \"../../Enum\";\nimport levels, { ILevel } from \"../../Levels\";\nimport EventMgr from \"../Base/EventMgr\";\nimport ResourceLoadMgr from \"../Base/ResourceLoadMgr\";\nimport DataManager from \"../Runtime/DataManager\";\nimport { TILE_HEIGHT, TILE_WIDTH } from \"../TileMap/TileManager\";\n// import { DataManager.Instance } from \"../Runtime/DataManager\";\nimport { TileMapManager } from \"../TileMap/TileMapManager\";\nimport { createNewNode } from \"../Utils\";\n\nconst ANIMATION_SPEED = 1 / 8\n\nconst { ccclass, property } = _decorator;\n@ccclass('PlayerMrg')\nexport class PlayerMrg extends Component {\n    async init() {\n        const spriteAtlas = await ResourceLoadMgr.Instance.loadRes('texture/player/idle/top/idle', SpriteAtlas)\n        const sprite = this.addComponent(Sprite)\n        sprite.sizeMode = Sprite.SizeMode.CUSTOM\n        const transform = this.node.getComponent(UITransform)\n        transform.setContentSize(TILE_WIDTH * 4, TILE_HEIGHT * 4)\n\n        const animationClip = new AnimationClip();\n        animationClip.duration = 1.0; // 整个动画剪辑的周期\n\n        const animationCom = this.addComponent(Animation)\n\n        const track = new animation.ObjectTrack(); // 创建一个对象轨道\n        track.path = new animation.TrackPath().toComponent(Sprite).toProperty('spriteFrame'); // 找子节点组件 以及属性\n\n        const spFrames = spriteAtlas.spriteFrames\n        const frams: Array<[number, SpriteFrame]> = []\n\n        let index = 0\n        for (const key in spFrames) {\n            if (Object.prototype.hasOwnProperty.call(spFrames, key)) {\n                const element = spFrames[key];\n                frams.push([ANIMATION_SPEED * index, element])\n                index++\n            }\n        }\n        console.log(frams)\n        track.channel.curve.assignSorted(frams)\n\n        // const frames: Array<[number, SpriteFrame]> = spFrames.map((item: SpriteFrame, index: number) => [ANIMATION_SPEED * index, item])\n\n        // // 最后将轨道添加到动画剪辑以应用\n        animationClip.addTrack(track)\n        animationClip.wrapMode = AnimationClip.WrapMode.Loop\n\n        animationCom.defaultClip = animationClip\n        animationCom.play()\n    }\n}"]}