{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Scripts/TileMap/TileMapManager.ts"],"names":["Component","_decorator","Node","resources","Sprite","UITransform","Layers","SpriteAtlas","levels","TILE_WIDTH","TILE_HEIGHT","ccclass","property","TileMapManager","start","init","spriteAtlas","loadRes","mapInfo","index","length","colnum","j","item","src","type","node","sprite","addComponent","imgSrc","sp","spriteFrame","transfrom","setContentSize","layer","nameToLayer","setPosition","setParent","Promise","resolve","reject","load","err","atlas","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,S,OAAAA,S;AAAwBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;AACpFC,MAAAA,M;;;;;;;;;AAEDC,MAAAA,U,GAAa,E;AACbC,MAAAA,W,GAAc,E;OAEd;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;;gCAEjBY,c,WADZF,OAAO,CAAC,gBAAD,C,gBAAR,MACaE,cADb,SACoCb,SADpC,CAC8C;AAC1Cc,QAAAA,KAAK,GAAG,CAEP;;AAEKC,QAAAA,IAAI,GAAG;AAAA;;AAAA;AACT,gBAAMC,WAAW,SAAS,KAAI,CAACC,OAAL,EAA1B;AACA,gBAAM;AAAEC,cAAAA;AAAF,gBAAc;AAAA;AAAA,4CAAe,CAAf,CAApB;;AAEA,iBAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,OAAO,CAACE,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;AACjD,kBAAME,MAAM,GAAGH,OAAO,CAACC,KAAD,CAAtB;;AACA,mBAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACD,MAA3B,EAAmCE,CAAC,EAApC,EAAwC;AACpC,oBAAMC,IAAI,GAAGF,MAAM,CAACC,CAAD,CAAnB;;AACA,oBAAIC,IAAI,CAACC,GAAL,KAAa,IAAb,IAAqBD,IAAI,CAACE,IAAL,KAAc,IAAvC,EAA6C;AACzC;AACH;;AAED,oBAAMC,IAAI,GAAG,IAAIxB,IAAJ,EAAb;AACA,oBAAMyB,MAAM,GAAGD,IAAI,CAACE,YAAL,CAAkBxB,MAAlB,CAAf;AACA,oBAAMyB,MAAM,cAAYN,IAAI,CAACC,GAAjB,MAAZ;AACA,oBAAMM,EAAE,GAAGd,WAAW,CAACa,MAAD,CAAtB;AACAF,gBAAAA,MAAM,CAACI,WAAP,GAAqBD,EAArB,CAVoC,CAWpC;;AAEA,oBAAME,SAAS,GAAGN,IAAI,CAACE,YAAL,CAAkBvB,WAAlB,CAAlB;AACA2B,gBAAAA,SAAS,CAACC,cAAV,CAAyBxB,UAAzB,EAAqCC,WAArC;AAEAgB,gBAAAA,IAAI,CAACQ,KAAL,GAAa,KAAK5B,MAAM,CAAC6B,WAAP,CAAmB,OAAnB,CAAlB;AACAT,gBAAAA,IAAI,CAACU,WAAL,CAAiBjB,KAAK,GAAGV,UAAzB,EAAqC,CAACa,CAAD,GAAKZ,WAA1C;AACAgB,gBAAAA,IAAI,CAACW,SAAL,CAAe,KAAI,CAACX,IAApB;AACH;AACJ;AA1BQ;AA2BZ;;AAEDT,QAAAA,OAAO,GAAG;AACN,iBAAO,IAAIqB,OAAJ,CAAyB,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACArC,YAAAA,SAAS,CAACsC,IAAV,CAAe,mBAAf,EAAoClC,WAApC,EAAiD,CAACmC,GAAD,EAAMC,KAAN,KAAgB;AAC7D,kBAAI,CAACD,GAAL,EAAU;AACNH,gBAAAA,OAAO,CAACI,KAAD,CAAP;AACA;AACH,eAHD,MAGO;AACHC,gBAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAF,gBAAAA,MAAM,CAAC,KAAD,CAAN;AACH;AACJ,aARD;AASH,WAnBM,CAAP;AAoBH;;AAvDyC,O","sourcesContent":["import { Component, _decorator, Node, resources, SpriteFrame, Sprite, UITransform, Layers, SpriteAtlas } from \"cc\";\nimport levels from \"../../Levels\";\n\nconst TILE_WIDTH = 55\nconst TILE_HEIGHT = 55\n\nconst { ccclass, property } = _decorator;\n@ccclass('TileMapManager')\nexport class TileMapManager extends Component {\n    start() {\n\n    }\n\n    async init() {\n        const spriteAtlas = await this.loadRes()\n        const { mapInfo } = levels[`level${1}`]\n\n        for (let index = 0; index < mapInfo.length; index++) {\n            const colnum = mapInfo[index];\n            for (let j = 0; j < colnum.length; j++) {\n                const item = colnum[j];\n                if (item.src === null || item.type === null) {\n                    continue\n                }\n\n                const node = new Node()\n                const sprite = node.addComponent(Sprite)\n                const imgSrc = `tile (${item.src})`\n                const sp = spriteAtlas[imgSrc]\n                sprite.spriteFrame = sp\n                // sprite.spriteFrame = spriteFrames.find(v => v.name === imgSrc) || spriteFrames[0]    \n\n                const transfrom = node.addComponent(UITransform)\n                transfrom.setContentSize(TILE_WIDTH, TILE_HEIGHT)\n\n                node.layer = 1 << Layers.nameToLayer('UI_2D')\n                node.setPosition(index * TILE_WIDTH, -j * TILE_HEIGHT)\n                node.setParent(this.node)\n            }\n        }\n    }\n\n    loadRes() {\n        return new Promise<SpriteAtlas>((resolve, reject) => {\n            // resources.loadDir(\"texture/tile/tile\", SpriteFrame, function (err, assets) {\n            //     if (!err) {\n            //         resolve(assets)\n            //         return\n            //     } else {\n            //         console.log(err)\n            //         reject(false)\n            //     }\n            // });\n            resources.load(\"texture/tile/tile\", SpriteAtlas, (err, atlas) => {\n                if (!err) {\n                    resolve(atlas)\n                    return\n                } else {\n                    console.log(err)\n                    reject(false)\n                }\n            });\n        })\n    }\n}"]}