{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Scripts/Enemy/Wooden/WoodenMgr.ts"],"names":["_decorator","DIRECTION_ENUM","ENITIY_TYPE_ENUM","ENTITY_STATE_ENUM","ENUM_EVENT","EnitiyMgr","EventMgr","DataManager","WoodenStateMachine","MOVE_SPEED","ccclass","property","WoodenMgr","init","fsm","addComponent","x","y","type","WOODEN","state","IDLE","direction","TOP","handlerPlayerMoveEnd","Instance","playerInfo","DEATH","playerX","playerY","disX","Math","abs","disY","RIGHT","LEFT","BOTTOM","checkAttack","console","log","playerState","AIRDEATH","ATTACK","emit","ENUM_PLAYER_DEATH","onDeath","id","onLoad","addEventListen","ENUM_MOVE_END","ENUM_PLAYER_BORN","ENUM_ENEMY_DEATH","onDestry","unEventListen"],"mappings":"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","sourcesContent":["import { Component, _decorator, Node, Sprite, UITransform, Animation, SpriteAtlas, AnimationClip, animation, SpriteFrame, Texture2D, math } from \"cc\";\nimport { DIRECTION_ENUM, DIRECTION_ORDER_ENUM, ENITIY_TYPE_ENUM, ENTITY_STATE_ENUM, ENUM_EVENT, ENUM_BOTTOM_CONTROLLER, PARAMS_NAME_TYPE } from \"../../../Enum\";\nimport { EnitiyMgr } from \"../../Base/EnitiyMgr\";\nimport EventMgr from \"../../Base/EventMgr\";\nimport { PlayerStateMachine } from \"../../Player/PlayerStateMachine\";\nimport DataManager from \"../../Runtime/DataManager\";\nimport { WoodenStateMachine } from \"./WoodenStateMachine\";\n\nexport const MOVE_SPEED = 1 / 10\n\nconst { ccclass, property } = _decorator;\n@ccclass('WoodenMgr')\nexport class WoodenMgr extends EnitiyMgr {\n\n    async init() {\n        this.fsm = this.addComponent(WoodenStateMachine)\n        await this.fsm.init()\n\n        super.init({\n            x: 2,\n            y: 4,\n            type: ENITIY_TYPE_ENUM.WOODEN,\n            state: ENTITY_STATE_ENUM.IDLE,\n            direction: DIRECTION_ENUM.TOP\n        })\n\n    }\n\n    handlerPlayerMoveEnd() {\n        if (!DataManager.Instance.playerInfo)\n            return\n        if (this.state === ENTITY_STATE_ENUM.DEATH || !DataManager.Instance.playerInfo)\n            return\n\n        const { x: playerX, y: playerY } = DataManager.Instance.playerInfo\n        const disX = Math.abs(this.x - playerX)\n        const disY = Math.abs(this.y - playerY)\n\n        if (playerX >= this.x && playerY <= this.y) {\n            disY > disX ? this.direction = DIRECTION_ENUM.TOP : this.direction = DIRECTION_ENUM.RIGHT\n        } else if (playerX <= this.x && playerY <= this.y) {\n            disY > disX ? this.direction = DIRECTION_ENUM.TOP : this.direction = DIRECTION_ENUM.LEFT\n        } else if (playerX <= this.x && this.y >= playerY) {\n            disY > disX ? this.direction = DIRECTION_ENUM.BOTTOM : this.direction = DIRECTION_ENUM.LEFT\n        } else if (playerX >= this.x && this.y >= playerY) {\n            disY > disX ? this.direction = DIRECTION_ENUM.BOTTOM : this.direction = DIRECTION_ENUM.RIGHT\n        }\n    }\n\n    checkAttack() {\n        console.log('当前state', this.state)\n        if (this.state === ENTITY_STATE_ENUM.DEATH || !DataManager.Instance.playerInfo)\n            return\n\n        const { x: playerX, y: playerY, state: playerState } = DataManager.Instance.playerInfo\n        const disX = Math.abs(this.x - playerX)\n        const disY = Math.abs(this.y - playerY)\n\n        if (playerState == ENTITY_STATE_ENUM.DEATH || playerState == ENTITY_STATE_ENUM.AIRDEATH)\n            return\n\n        if ((this.x === playerX && disY <= 1) || (this.y === playerY && disX <= 1)) {\n            this.state = ENTITY_STATE_ENUM.ATTACK\n            EventMgr.Instance.emit(ENUM_EVENT.ENUM_PLAYER_DEATH, ENTITY_STATE_ENUM.DEATH)\n        } else {\n            this.state = ENTITY_STATE_ENUM.IDLE\n        }\n    }\n\n    onDeath(id: string) {\n        if (this.id === id) {\n            this.state = ENTITY_STATE_ENUM.DEATH\n            console.log('怪物死亡 状态改变')\n        }\n    }\n\n    onLoad() {\n        EventMgr.Instance.addEventListen(ENUM_EVENT.ENUM_MOVE_END, this.handlerPlayerMoveEnd, this)\n        EventMgr.Instance.addEventListen(ENUM_EVENT.ENUM_PLAYER_BORN, this.handlerPlayerMoveEnd, this)\n        EventMgr.Instance.addEventListen(ENUM_EVENT.ENUM_MOVE_END, this.checkAttack, this)\n        EventMgr.Instance.addEventListen(ENUM_EVENT.ENUM_ENEMY_DEATH, this.onDeath, this)\n    }\n\n    onDestry() {\n        EventMgr.Instance.unEventListen(ENUM_EVENT.ENUM_MOVE_END, this.handlerPlayerMoveEnd)\n        EventMgr.Instance.unEventListen(ENUM_EVENT.ENUM_PLAYER_BORN, this.handlerPlayerMoveEnd)\n        EventMgr.Instance.unEventListen(ENUM_EVENT.ENUM_MOVE_END, this.checkAttack)\n        EventMgr.Instance.unEventListen(ENUM_EVENT.ENUM_ENEMY_DEATH, this.onDeath)\n    }\n\n\n}"]}