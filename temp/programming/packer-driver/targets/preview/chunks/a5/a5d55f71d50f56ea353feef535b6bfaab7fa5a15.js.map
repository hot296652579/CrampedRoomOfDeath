{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Scripts/Base/State.ts"],"names":["State","animation","AnimationClip","Sprite","SpriteAtlas","ResourceLoadMgr","sortSpriteFrame","ANIMATION_SPEED","constructor","fsm","path","isLoop","WrapMode","Normal","animationClip","init","promise","Instance","loadRes","waitList","push","spriteAtlas","track","ObjectTrack","TrackPath","toComponent","toProperty","spFrames","spriteFrames","frams","index","sortSpFrames","key","Object","prototype","hasOwnProperty","call","element","channel","curve","assignSorted","addTrack","name","wrapMode","duration","length","run","animationCom","defaultClip","play"],"mappings":";;;gKAWqBA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;AAXZC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,a,OAAAA,a;AAAeC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;AACpCC,MAAAA,e;;AAGEC,MAAAA,e,iBAAAA,e;;;;;;;;;AACT;AAEMC,MAAAA,e,GAAkB,IAAI,C;AAG5B;;yBACqBP,K,GAAN,MAAMA,KAAN,CAAY;AAEvBQ,QAAAA,WAAW,CAASC,GAAT,EAAoCC,IAApC,EAA0DC,MAA1D,EAA0H;AAAA,cAAhEA,MAAgE;AAAhEA,YAAAA,MAAgE,GAA/BT,aAAa,CAACU,QAAd,CAAuBC,MAAQ;AAAA;;AAAA,eADrIC,aACqI;AAAA,eAAjHL,GAAiH,GAAjHA,GAAiH;AAAA,eAAtFC,IAAsF,GAAtFA,IAAsF;AAAA,eAAhEC,MAAgE,GAAhEA,MAAgE;AACjI,eAAKI,IAAL;AACH;;AAEKA,QAAAA,IAAI,GAAG;AAAA;;AAAA;AACT,gBAAMC,OAAO,GAAG;AAAA;AAAA,oDAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,KAAI,CAACR,IAAtC,EAA4CN,WAA5C,CAAhB;;AACA,YAAA,KAAI,CAACK,GAAL,CAASU,QAAT,CAAkBC,IAAlB,CAAuBJ,OAAvB;;AACA,gBAAMK,WAAW,SAASL,OAA1B;AACA,YAAA,KAAI,CAACF,aAAL,GAAqB,IAAIZ,aAAJ,EAArB;AAEA,gBAAMoB,KAAK,GAAG,IAAIrB,SAAS,CAACsB,WAAd,EAAd,CANS,CAMkC;;AAC3CD,YAAAA,KAAK,CAACZ,IAAN,GAAa,IAAIT,SAAS,CAACuB,SAAd,GAA0BC,WAA1B,CAAsCtB,MAAtC,EAA8CuB,UAA9C,CAAyD,aAAzD,CAAb,CAPS,CAO6E;;AAEtF,gBAAMC,QAAQ,GAAGN,WAAW,CAACO,YAA7B;AACA,gBAAMC,KAAmC,GAAG,EAA5C;AAEA,gBAAIC,KAAK,GAAG,CAAZ;AACA,gBAAIC,YAAY,GAAG;AAAA;AAAA,oDAAgBJ,QAAhB,CAAnB;;AACA,iBAAK,IAAMK,GAAX,IAAkBD,YAAlB,EAAgC;AAC5B,kBAAIE,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,YAArC,EAAmDC,GAAnD,CAAJ,EAA6D;AACzD,oBAAMK,OAAO,GAAGN,YAAY,CAACC,GAAD,CAA5B;AACAH,gBAAAA,KAAK,CAACT,IAAN,CAAW,CAACb,eAAe,GAAGuB,KAAnB,EAA0BO,OAA1B,CAAX;AACAP,gBAAAA,KAAK;AACR;AACJ,aApBQ,CAqBT;;;AACAR,YAAAA,KAAK,CAACgB,OAAN,CAAcC,KAAd,CAAoBC,YAApB,CAAiCX,KAAjC,EAtBS,CAwBT;;AACA,YAAA,KAAI,CAACf,aAAL,CAAmB2B,QAAnB,CAA4BnB,KAA5B;;AACA,YAAA,KAAI,CAACR,aAAL,CAAmB4B,IAAnB,GAA0B,KAAI,CAAChC,IAA/B;AACA,YAAA,KAAI,CAACI,aAAL,CAAmB6B,QAAnB,GAA8B,KAAI,CAAChC,MAAnC;AACA,YAAA,KAAI,CAACG,aAAL,CAAmB8B,QAAnB,GAA8Bf,KAAK,CAACgB,MAAN,GAAetC,eAA7C,CA5BS,CA4BqD;AA5BrD;AA6BZ;;AAEDuC,QAAAA,GAAG,GAAG;AACF,eAAKrC,GAAL,CAASsC,YAAT,CAAsBC,WAAtB,GAAoC,KAAKlC,aAAzC;AACA,eAAKL,GAAL,CAASsC,YAAT,CAAsBE,IAAtB;AACH;;AAxCsB,O","sourcesContent":["import { animation, AnimationClip, Sprite, SpriteAtlas, SpriteFrame } from \"cc\";\nimport ResourceLoadMgr from \"./ResourceLoadMgr\";\nimport { PlayerStateMachine } from \"./PlayerStateMachine\";\nimport { StateMachine } from \"./SateMachine\";\nimport { sortSpriteFrame } from \"../Utils\";\n// import { sortSpriteFrame } from \"../Utils\";\n\nconst ANIMATION_SPEED = 1 / 8\n\n\n/**真正播动画的地方*/\nexport default class State {\n    animationClip: AnimationClip\n    constructor(private fsm: StateMachine, private path: string, private isLoop: AnimationClip.WrapMode = AnimationClip.WrapMode.Normal) {\n        this.init()\n    }\n\n    async init() {\n        const promise = ResourceLoadMgr.Instance.loadRes(this.path, SpriteAtlas)\n        this.fsm.waitList.push(promise)\n        const spriteAtlas = await promise\n        this.animationClip = new AnimationClip();\n\n        const track = new animation.ObjectTrack(); // 创建一个对象轨道\n        track.path = new animation.TrackPath().toComponent(Sprite).toProperty('spriteFrame'); // 找子节点组件 以及属性\n\n        const spFrames = spriteAtlas.spriteFrames\n        const frams: Array<[number, SpriteFrame]> = []\n\n        let index = 0\n        let sortSpFrames = sortSpriteFrame(spFrames)\n        for (const key in sortSpFrames) {\n            if (Object.prototype.hasOwnProperty.call(sortSpFrames, key)) {\n                const element = sortSpFrames[key];\n                frams.push([ANIMATION_SPEED * index, element])\n                index++\n            }\n        }\n        // console.log(frams)\n        track.channel.curve.assignSorted(frams)\n\n        // // 最后将轨道添加到动画剪辑以应用\n        this.animationClip.addTrack(track)\n        this.animationClip.name = this.path\n        this.animationClip.wrapMode = this.isLoop\n        this.animationClip.duration = frams.length * ANIMATION_SPEED; // 整个动画剪辑的周期\n    }\n\n    run() {\n        this.fsm.animationCom.defaultClip = this.animationClip\n        this.fsm.animationCom.play()\n    }\n}"]}