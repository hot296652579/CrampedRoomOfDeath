{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Scripts/Player/PlayerMgr.ts"],"names":["_decorator","DIRECTION_ENUM","ENITIY_TYPE_ENUM","ENTITY_STATE_ENUM","ENUM_EVENT","ENUM_BOTTOM_CONTROLLER","EventMgr","DataManager","PlayerStateMachine","EnitiyMgr","MOVE_SPEED","ccclass","property","PlayerMrg","tartgetX","tartgetY","init","fsm","addComponent","x","y","type","PLAYER","state","IDLE","direction","TOP","onLoad","Instance","addEventListen","ENUM_MOVE_PLAYER","inputHanlder","onDestry","unEventListen","update","updateXY","Math","abs","inputDirection","willBlock","console","log","handlerMove","tileMgrInfo","playerNextY","weaponNextY","playerTile","weaponTile","canMove","canTurn","BOTTOM","LEFT","RIGHT","TURNLEFT","TURNRIGHT"],"mappings":"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","sourcesContent":["import { Component, _decorator, Node, Sprite, UITransform, Animation, SpriteAtlas, AnimationClip, animation, SpriteFrame, Texture2D, math } from \"cc\";\nimport { DIRECTION_ENUM, DIRECTION_ORDER_ENUM, ENITIY_TYPE_ENUM, ENTITY_STATE_ENUM, ENUM_EVENT, ENUM_BOTTOM_CONTROLLER, PARAMS_NAME_TYPE } from \"../../Enum\";\nimport levels, { ILevel } from \"../../Levels\";\nimport EventMgr from \"../Base/EventMgr\";\nimport ResourceLoadMgr from \"../Base/ResourceLoadMgr\";\nimport DataManager from \"../Runtime/DataManager\";\nimport { TILE_HEIGHT, TILE_WIDTH } from \"../TileMap/TileManager\";\n// import { DataManager.Instance } from \"../Runtime/DataManager\";\nimport { TileMapManager } from \"../TileMap/TileMapManager\";\nimport { createNewNode } from \"../Utils\";\nimport { PlayerStateMachine } from \"../Base/PlayerStateMachine\";\nimport { EnitiyMgr } from \"../Base/EnitiyMgr\";\n\nexport const MOVE_SPEED = 1 / 10\n\nconst { ccclass, property } = _decorator;\n@ccclass('PlayerMrg')\nexport class PlayerMrg extends EnitiyMgr {\n\n    tartgetX: number = 0\n    tartgetY: number = 0\n\n    async init() {\n        this.fsm = this.addComponent(PlayerStateMachine)\n        await this.fsm.init()\n\n        super.init({\n            x: 2,\n            y: 8,\n            type: ENITIY_TYPE_ENUM.PLAYER,\n            state: ENTITY_STATE_ENUM.IDLE,\n            direction: DIRECTION_ENUM.TOP\n        })\n\n        this.tartgetX = this.x\n        this.tartgetY = this.y\n    }\n\n    onLoad() {\n        EventMgr.Instance.addEventListen(ENUM_EVENT.ENUM_MOVE_PLAYER, this.inputHanlder, this)\n    }\n\n    onDestry() {\n        EventMgr.Instance.unEventListen(ENUM_EVENT.ENUM_MOVE_PLAYER, this.inputHanlder)\n    }\n\n    update() {\n        this.updateXY()\n        super.update()\n    }\n\n    updateXY() {\n        if (this.tartgetX < this.x) {\n            this.x -= MOVE_SPEED\n        } else if (this.tartgetX > this.x) {\n            this.x += MOVE_SPEED\n        } else if (this.tartgetY < this.y) {\n            this.y -= MOVE_SPEED\n        } else if (this.tartgetY > this.y) {\n            this.y += MOVE_SPEED\n        }\n\n        if (Math.abs(this.tartgetX - this.x) <= 0.1 && Math.abs(this.tartgetY - this.y) <= 0.1) {\n            this.x = this.tartgetX\n            this.y = this.tartgetY\n        }\n    }\n\n    inputHanlder(inputDirection: ENUM_BOTTOM_CONTROLLER) {\n        if (this.willBlock(inputDirection)) {\n            console.log('block!!!!')\n            return\n        }\n\n        this.handlerMove(inputDirection)\n    }\n\n    willBlock(inputDirection: ENUM_BOTTOM_CONTROLLER) {\n        const { tartgetX: x, tartgetY: y, direction } = this\n        const { tileMgrInfo } = DataManager.Instance\n\n        console.log('y', y)\n\n        //先判断输入上时候\n        if (inputDirection === ENUM_BOTTOM_CONTROLLER.TOP) {\n            if (direction === DIRECTION_ENUM.TOP) {\n                let playerNextY = y - 1\n                let weaponNextY = y - 2\n\n                if (playerNextY <= 1)\n                    return true\n\n                let playerTile = tileMgrInfo[x][playerNextY]\n                let weaponTile = tileMgrInfo[x][weaponNextY]\n                if (playerTile && playerTile.canMove && (!weaponTile || weaponTile.canTurn)) {\n                    //empty\n                } else {\n                    true\n                }\n            }\n        }\n\n        return false\n    }\n\n    handlerMove(direction: ENUM_BOTTOM_CONTROLLER) {\n        console.log(DataManager.Instance.tileMgrInfo)\n        switch (direction) {\n            case ENUM_BOTTOM_CONTROLLER.TOP:\n                this.tartgetY -= 1\n                break;\n            case ENUM_BOTTOM_CONTROLLER.BOTTOM:\n                this.tartgetY += 1\n                break;\n            case ENUM_BOTTOM_CONTROLLER.LEFT:\n                this.tartgetX -= 1\n                break;\n            case ENUM_BOTTOM_CONTROLLER.RIGHT:\n                this.tartgetX += 1\n                break;\n            case ENUM_BOTTOM_CONTROLLER.TURNLEFT:\n                // this.fsm.setParams(PARAMS_NAME_TYPE.TURNLEFT, true)\n\n                if (this.direction === DIRECTION_ENUM.TOP) {\n                    this.direction = DIRECTION_ENUM.LEFT\n                } else if (this.direction === DIRECTION_ENUM.BOTTOM) {\n                    this.direction = DIRECTION_ENUM.RIGHT\n                } else if (this.direction === DIRECTION_ENUM.LEFT) {\n                    this.direction = DIRECTION_ENUM.BOTTOM\n                } else if (this.direction === DIRECTION_ENUM.RIGHT) {\n                    this.direction = DIRECTION_ENUM.TOP\n                }\n                this.state = ENTITY_STATE_ENUM.TURNLEFT\n                break;\n            case ENUM_BOTTOM_CONTROLLER.TURNRIGHT:\n\n                break;\n\n            default:\n                break;\n        }\n    }\n}"]}