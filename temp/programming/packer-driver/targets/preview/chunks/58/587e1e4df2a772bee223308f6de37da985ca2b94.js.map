{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Scripts/Player/PlayerStateMachine.ts"],"names":["Component","_decorator","AnimationClip","Animation","FSM_PARAMS_TYPE_ENUM","PARAMS_NAME_TYPE","Sate","getParamsInitValue","type","TRIGGER","value","ccclass","property","PlayerStateMachine","_currentSate","params","Map","stateMachine","animationCom","waitList","getParams","paramsName","has","get","setParams","run","currentSate","newSate","init","addComponent","initParams","initSateMachine","Promise","all","set","IDEL","TURNLEFT","WrapMode","Loop"],"mappings":"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","sourcesContent":["import { Component, _decorator, Node, AnimationClip, Animation, SpriteFrame, SpriteAtlas } from \"cc\";\nimport { ENUM_EVENT, ENUM_MOVE, FSM_PARAMS_TYPE_ENUM, PARAMS_NAME_TYPE } from \"../../Enum\";\n// import { DataManager.Instance } from \"../Runtime/DataManager\";\nimport { TileMapManager } from \"../TileMap/TileMapManager\";\nimport { createNewNode } from \"../Utils\";\nimport Sate from \"./State\";\nimport State from \"./State\";\n\n\ntype ParamsTypeValue = boolean | number\n\nexport interface IParamsVaule {\n    type: FSM_PARAMS_TYPE_ENUM,\n    value: ParamsTypeValue\n}\n\nexport const getParamsInitValue = () => {\n    return {\n        type: FSM_PARAMS_TYPE_ENUM.TRIGGER,\n        value: false\n    }\n}\n\nconst { ccclass, property } = _decorator;\n@ccclass('PlayerStateMachine')\nexport class PlayerStateMachine extends Component {\n    private _currentSate: State = null\n    params: Map<string, IParamsVaule> = new Map() //参数列表\n    stateMachine: Map<string, State> = new Map()  //动画state列表\n\n    animationCom: Animation = null\n\n    waitList: Array<Promise<SpriteAtlas>> = null\n\n\n    getParams(paramsName: string) {\n        if (this.params.has(paramsName)) {\n            return this.params.get(paramsName)\n        }\n    }\n\n    setParams(paramsName: string, value: ParamsTypeValue) {\n        if (this.params.has(paramsName)) {\n            this.params.get(paramsName).value = value\n            this.run()\n        }\n    }\n\n    get currentSate() {\n        return this._currentSate\n    }\n\n    set currentSate(newSate) {\n        this._currentSate = newSate\n        this._currentSate.run()\n    }\n    async init() {\n        this.animationCom = this.addComponent(Animation)\n\n        this.initParams()\n        this.initSateMachine()\n\n        await Promise.all(this.waitList)\n    }\n\n    initParams() {\n        this.params.set(PARAMS_NAME_TYPE.IDEL, getParamsInitValue())\n        this.params.set(PARAMS_NAME_TYPE.TURNLEFT, getParamsInitValue())\n    }\n\n    initSateMachine() {\n        this.stateMachine.set(PARAMS_NAME_TYPE.IDEL, new Sate(this, 'texture/player/idle/top/idle', AnimationClip.WrapMode.Loop))\n        this.stateMachine.set(PARAMS_NAME_TYPE.TURNLEFT, new Sate(this, 'texture/player/turnleft/top/idle'))\n    }\n\n    run() {\n        switch (this.currentSate) {\n            case this.stateMachine.get(PARAMS_NAME_TYPE.TURNLEFT):\n\n                break;\n            case this.stateMachine.get(PARAMS_NAME_TYPE.IDEL):\n                if (this.params.get(PARAMS_NAME_TYPE.TURNLEFT)) {\n                    this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.TURNLEFT)\n                } else if (this.params.get(PARAMS_NAME_TYPE.IDEL)) {\n                    this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.IDEL)\n                }\n                break;\n\n            default:\n                this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.IDEL)\n                break;\n        }\n    }\n}"]}