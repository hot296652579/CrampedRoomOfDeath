{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Scripts/Base/SateMachine.ts"],"names":["Component","_decorator","FSM_PARAMS_TYPE_ENUM","getParamsInitTrigger","type","TRIGGER","value","getParamsInitNumber","NUMBER","ccclass","property","StateMachine","_currentSate","params","Map","stateMachine","animationCom","waitList","getParams","paramsName","has","get","setParams","run","resetTrigger","currentSate","newSate","_","data"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,U,OAAAA,U;;AACYC,MAAAA,oB,iBAAAA,oB;;;;;;;;;sCAcnBC,oB,GAAuB,MAAM;AACtC,eAAO;AACHC,UAAAA,IAAI,EAAE;AAAA;AAAA,4DAAqBC,OADxB;AAEHC,UAAAA,KAAK,EAAE;AAFJ,SAAP;AAIH,O;;qCAEYC,mB,GAAsB,MAAM;AACrC,eAAO;AACHH,UAAAA,IAAI,EAAE;AAAA;AAAA,4DAAqBI,MADxB;AAEHF,UAAAA,KAAK,EAAE;AAFJ,SAAP;AAIH,O;;OAEK;AAAEG,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;8BAERU,Y,WADrBF,OAAO,CAAC,cAAD,C,gBAAR,MACsBE,YADtB,SAC2CX,SAD3C,CACqD;AAAA;AAAA;AAAA,eACzCY,YADyC,GACnB,IADmB;AAAA,eAEjDC,MAFiD,GAEb,IAAIC,GAAJ,EAFa;AAAA,eAGjDC,YAHiD,GAGd,IAAID,GAAJ,EAHc;AAAA,eAKjDE,YALiD,GAKvB,IALuB;AAAA,eAOjDC,QAPiD,GAOT,EAPS;AAAA;;AAUjDC,QAAAA,SAAS,CAACC,UAAD,EAAqB;AAC1B,cAAI,KAAKN,MAAL,CAAYO,GAAZ,CAAgBD,UAAhB,CAAJ,EAAiC;AAC7B,mBAAO,KAAKN,MAAL,CAAYQ,GAAZ,CAAgBF,UAAhB,CAAP;AACH;AACJ;;AAEDG,QAAAA,SAAS,CAACH,UAAD,EAAqBb,KAArB,EAA6C;AAClD,cAAI,KAAKO,MAAL,CAAYO,GAAZ,CAAgBD,UAAhB,CAAJ,EAAiC;AAC7B,iBAAKN,MAAL,CAAYQ,GAAZ,CAAgBF,UAAhB,EAA4Bb,KAA5B,GAAoCA,KAApC;AACA,iBAAKiB,GAAL;AACA,iBAAKC,YAAL;AACH;AACJ;;AAEc,YAAXC,WAAW,GAAG;AACd,iBAAO,KAAKb,YAAZ;AACH;;AAEc,YAAXa,WAAW,CAACC,OAAD,EAAU;AACrB,eAAKd,YAAL,GAAoBc,OAApB;;AACA,eAAKd,YAAL,CAAkBW,GAAlB;AACH;;AAEDC,QAAAA,YAAY,GAAG;AACX,eAAK,MAAM,CAACG,CAAD,EAAIC,IAAJ,CAAX,IAAwB,KAAKf,MAA7B,EAAqC;AACjC,gBAAIe,IAAI,CAACxB,IAAL,IAAa;AAAA;AAAA,8DAAqBC,OAAtC,EAA+C;AAC3CuB,cAAAA,IAAI,CAACtB,KAAL,GAAa,KAAb;AACH;AACJ;AACJ;;AAvCgD,O","sourcesContent":["import { Component, _decorator, Node, AnimationClip, Animation, SpriteFrame, SpriteAtlas } from \"cc\";\nimport { ENUM_EVENT, ENUM_MOVE, FSM_PARAMS_TYPE_ENUM, PARAMS_NAME_TYPE } from \"../../Enum\";\n// import { DataManager.Instance } from \"../Runtime/DataManager\";\nimport { TileMapManager } from \"../TileMap/TileMapManager\";\nimport { createNewNode } from \"../Utils\";\nimport State from \"./State\";\n\n\ntype ParamsTypeValue = boolean | number\n\nexport interface IParamsVaule {\n    type: FSM_PARAMS_TYPE_ENUM,\n    value: ParamsTypeValue\n}\n\nexport const getParamsInitTrigger = () => {\n    return {\n        type: FSM_PARAMS_TYPE_ENUM.TRIGGER,\n        value: false\n    }\n}\n\nexport const getParamsInitNumber = () => {\n    return {\n        type: FSM_PARAMS_TYPE_ENUM.NUMBER,\n        value: 0\n    }\n}\n\nconst { ccclass, property } = _decorator;\n@ccclass('StateMachine')\nexport abstract class StateMachine extends Component {\n    private _currentSate: State = null\n    params: Map<string, IParamsVaule> = new Map() //参数列表\n    stateMachine: Map<string, State> = new Map()  //动画state列表\n\n    animationCom: Animation = null\n\n    waitList: Array<Promise<SpriteAtlas>> = []\n\n\n    getParams(paramsName: string) {\n        if (this.params.has(paramsName)) {\n            return this.params.get(paramsName)\n        }\n    }\n\n    setParams(paramsName: string, value: ParamsTypeValue) {\n        if (this.params.has(paramsName)) {\n            this.params.get(paramsName).value = value\n            this.run()\n            this.resetTrigger()\n        }\n    }\n\n    get currentSate() {\n        return this._currentSate\n    }\n\n    set currentSate(newSate) {\n        this._currentSate = newSate\n        this._currentSate.run()\n    }\n\n    resetTrigger() {\n        for (const [_, data] of this.params) {\n            if (data.type == FSM_PARAMS_TYPE_ENUM.TRIGGER) {\n                data.value = false\n            }\n        }\n    }\n\n    abstract run(): void\n    abstract init(): void\n}"]}