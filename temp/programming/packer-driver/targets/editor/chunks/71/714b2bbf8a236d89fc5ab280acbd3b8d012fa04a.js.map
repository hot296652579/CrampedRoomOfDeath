{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Script/TileMap/TileMapManager.ts"],"names":["Component","_decorator","Node","resources","SpriteFrame","Sprite","UITransform","Layers","levels","TILE_WIDTH","TILE_HEIGHT","ccclass","property","TileMapManager","start","init","spriteFrames","loadRes","console","log","mapInfo","index","length","colnum","j","item","src","type","node","sprite","addComponent","imgSrc","spriteFrame","find","v","name","transfrom","setContentSize","layer","nameToLayer","setParent","Promise","resolve","reject","loadDir","err","assets"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;;AAC5EC,MAAAA,M;;;;;;;;;AAEDC,MAAAA,U,GAAa,E;AACbC,MAAAA,W,GAAc,E;OAEd;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;;gCAEjBY,c,WADZF,OAAO,CAAC,gBAAD,C,gBAAR,MACaE,cADb,SACoCb,SADpC,CAC8C;AAC1Cc,QAAAA,KAAK,GAAG,CAEP;;AAGS,cAAJC,IAAI,GAAG;AACT,gBAAMC,YAAY,GAAG,MAAM,KAAKC,OAAL,EAA3B;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACA,gBAAM;AAAEI,YAAAA;AAAF,cAAc;AAAA;AAAA,gCAAQ,QAAO,CAAE,EAAjB,CAApB;;AAEA,eAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,OAAO,CAACE,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;AACjD,kBAAME,MAAM,GAAGH,OAAO,CAACC,KAAD,CAAtB;;AACA,iBAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACD,MAA3B,EAAmCE,CAAC,EAApC,EAAwC;AACpC,oBAAMC,IAAI,GAAGF,MAAM,CAACF,KAAD,CAAnB;AACA,kBAAII,IAAI,CAACC,GAAL,KAAa,IAAb,IAAqBD,IAAI,CAACE,IAAL,KAAc,IAAvC,EACI;AAEJ,oBAAMC,IAAI,GAAG,IAAI1B,IAAJ,EAAb;AACA,oBAAM2B,MAAM,GAAGD,IAAI,CAACE,YAAL,CAAkBzB,MAAlB,CAAf;AACA,oBAAM0B,MAAM,GAAI,SAAQN,IAAI,CAACC,GAAI,GAAjC;AACAG,cAAAA,MAAM,CAACG,WAAP,GAAqBhB,YAAY,CAACiB,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWJ,MAAlC,KAA6Cf,YAAY,CAAC,CAAD,CAA9E;AAEA,oBAAMoB,SAAS,GAAGR,IAAI,CAACE,YAAL,CAAkBxB,WAAlB,CAAlB;AACA8B,cAAAA,SAAS,CAACC,cAAV,CAAyB5B,UAAzB,EAAqCC,WAArC;AAEAkB,cAAAA,IAAI,CAACU,KAAL,GAAa,KAAK/B,MAAM,CAACgC,WAAP,CAAmB,OAAnB,CAAlB;AACAX,cAAAA,IAAI,CAACY,SAAL,CAAe,KAAKZ,IAApB;AACH;AACJ;AACJ;;AAEDX,QAAAA,OAAO,GAAG;AACN,iBAAO,IAAIwB,OAAJ,CAA2B,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnDxC,YAAAA,SAAS,CAACyC,OAAV,CAAkB,mBAAlB,EAAuCxC,WAAvC,EAAoD,UAAUyC,GAAV,EAAeC,MAAf,EAAuB;AACvE,kBAAI,CAACD,GAAL,EAAU;AACNH,gBAAAA,OAAO,CAACI,MAAD,CAAP;AACH,eAFD,MAEO;AACH5B,gBAAAA,OAAO,CAACC,GAAR,CAAY0B,GAAZ;AACAF,gBAAAA,MAAM,CAAC,KAAD,CAAN;AACH;AACJ,aAPD;AAQH,WATM,CAAP;AAUH;;AA3CyC,O","sourcesContent":["import { Component, _decorator, Node, resources, SpriteFrame, Sprite, UITransform, Layers } from \"cc\";\nimport levels from \"../../Levels\";\n\nconst TILE_WIDTH = 55\nconst TILE_HEIGHT = 55\n\nconst { ccclass, property } = _decorator;\n@ccclass('TileMapManager')\nexport class TileMapManager extends Component {\n    start() {\n\n    }\n\n\n    async init() {\n        const spriteFrames = await this.loadRes()\n        console.log(spriteFrames)\n        const { mapInfo } = levels[`level${1}`]\n\n        for (let index = 0; index < mapInfo.length; index++) {\n            const colnum = mapInfo[index];\n            for (let j = 0; j < colnum.length; j++) {\n                const item = colnum[index];\n                if (item.src === null || item.type === null)\n                    continue\n\n                const node = new Node()\n                const sprite = node.addComponent(Sprite)\n                const imgSrc = `tile (${item.src})`\n                sprite.spriteFrame = spriteFrames.find(v => v.name === imgSrc) || spriteFrames[0]\n\n                const transfrom = node.addComponent(UITransform)\n                transfrom.setContentSize(TILE_WIDTH, TILE_HEIGHT)\n\n                node.layer = 1 << Layers.nameToLayer('UI_2D')\n                node.setParent(this.node)\n            }\n        }\n    }\n\n    loadRes() {\n        return new Promise<SpriteFrame[]>((resolve, reject) => {\n            resources.loadDir(\"texture/tile/tile\", SpriteFrame, function (err, assets) {\n                if (!err) {\n                    resolve(assets)\n                } else {\n                    console.log(err)\n                    reject(false)\n                }\n            });\n        })\n    }\n}"]}