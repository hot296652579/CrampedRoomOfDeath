{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Scripts/Player/PlayerStateMachine.ts"],"names":["_decorator","Animation","PARAMS_NAME_TYPE","ENTITY_STATE_ENUM","AttackSubStateMachine","BlockFrontSubStateMachine","BlockTurnLeftSubStateMachine","BlockTurnRightSubStateMachine","DeathSubStateMachine","IdleSubStateMachine","TurnLeftSubStateMachine","TurnRightSubStateMachine","EnitiyMgr","getParamsInitNumber","getParamsInitTrigger","StateMachine","AirDeathSubStateMachine","BlockLeftSubStateMachine","BlockRightSubStateMachine","ccclass","property","PlayerStateMachine","init","animationCom","addComponent","initParams","initSateMachine","addAnimationEvent","Promise","all","waitList","params","set","IDLE","TURNLEFT","TURNRIGHT","DIRECTION","BLOCKFRONT","BLOCKTURNLEFT","BLOCKTURNRIGHT","DEATH","AIRDEATH","ATTACK","stateMachine","BLOCKLEFT","BLOCKRIGHT","on","EventType","FINISHED","animationName","defaultClip","name","list","some","v","includes","node","getComponent","state","run","currentSate","get","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAoBA,MAAAA,U,OAAAA,U;AAAiCC,MAAAA,S,OAAAA,S;;AACcC,MAAAA,gB,iBAAAA,gB;AAAoCC,MAAAA,iB,iBAAAA,iB;;AAChGC,MAAAA,qB;;AACAC,MAAAA,yB;;AACAC,MAAAA,4B;;AACAC,MAAAA,6B;;AACAC,MAAAA,oB;;AACAC,MAAAA,mB;;AACAC,MAAAA,uB;;AACAC,MAAAA,wB;;AAIEC,MAAAA,S,kBAAAA,S;;AACAC,MAAAA,mB,kBAAAA,mB;AAAqBC,MAAAA,oB,kBAAAA,oB;AAAsBC,MAAAA,Y,kBAAAA,Y;;AAE7CC,MAAAA,uB;;AACAC,MAAAA,wB;;AACAC,MAAAA,yB;;;;;;;;;OAGD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBpB,U;;oCAEjBqB,kB,WADZF,OAAO,CAAC,oBAAD,C,gBAAR,MACaE,kBADb;AAAA;AAAA,wCACqD;AACvC,cAAJC,IAAI,GAAG;AACT,eAAKC,YAAL,GAAoB,KAAKC,YAAL,CAAkBvB,SAAlB,CAApB;AAEA,eAAKwB,UAAL;AACA,eAAKC,eAAL;AACA,eAAKC,iBAAL;AAEA,gBAAMC,OAAO,CAACC,GAAR,CAAY,KAAKC,QAAjB,CAAN;AACH;;AAEDL,QAAAA,UAAU,GAAG;AACT,eAAKM,MAAL,CAAYC,GAAZ,CAAgB;AAAA;AAAA,oDAAiBC,IAAjC,EAAuC;AAAA;AAAA,6DAAvC;AACA,eAAKF,MAAL,CAAYC,GAAZ,CAAgB;AAAA;AAAA,oDAAiBE,QAAjC,EAA2C;AAAA;AAAA,6DAA3C;AACA,eAAKH,MAAL,CAAYC,GAAZ,CAAgB;AAAA;AAAA,oDAAiBG,SAAjC,EAA4C;AAAA;AAAA,6DAA5C;AACA,eAAKJ,MAAL,CAAYC,GAAZ,CAAgB;AAAA;AAAA,oDAAiBI,SAAjC,EAA4C;AAAA;AAAA,2DAA5C;AACA,eAAKL,MAAL,CAAYC,GAAZ,CAAgB;AAAA;AAAA,oDAAiBK,UAAjC,EAA6C;AAAA;AAAA,6DAA7C;AACA,eAAKN,MAAL,CAAYC,GAAZ,CAAgB;AAAA;AAAA,oDAAiBM,aAAjC,EAAgD;AAAA;AAAA,6DAAhD;AACA,eAAKP,MAAL,CAAYC,GAAZ,CAAgB;AAAA;AAAA,oDAAiBO,cAAjC,EAAiD;AAAA;AAAA,6DAAjD;AACA,eAAKR,MAAL,CAAYC,GAAZ,CAAgB;AAAA;AAAA,oDAAiBQ,KAAjC,EAAwC;AAAA;AAAA,6DAAxC;AACA,eAAKT,MAAL,CAAYC,GAAZ,CAAgB;AAAA;AAAA,oDAAiBS,QAAjC,EAA2C;AAAA;AAAA,6DAA3C;AACA,eAAKV,MAAL,CAAYC,GAAZ,CAAgB;AAAA;AAAA,oDAAiBU,MAAjC,EAAyC;AAAA;AAAA,6DAAzC;AACH;;AAEDhB,QAAAA,eAAe,GAAG;AACd;AACA;AACA,eAAKiB,YAAL,CAAkBX,GAAlB,CAAsB;AAAA;AAAA,oDAAiBC,IAAvC,EAA6C;AAAA;AAAA,0DAAwB,IAAxB,CAA7C;AACA,eAAKU,YAAL,CAAkBX,GAAlB,CAAsB;AAAA;AAAA,oDAAiBE,QAAvC,EAAiD;AAAA;AAAA,kEAA4B,IAA5B,CAAjD;AACA,eAAKS,YAAL,CAAkBX,GAAlB,CAAsB;AAAA;AAAA,oDAAiBG,SAAvC,EAAkD;AAAA;AAAA,oEAA6B,IAA7B,CAAlD;AACA,eAAKQ,YAAL,CAAkBX,GAAlB,CAAsB;AAAA;AAAA,oDAAiBK,UAAvC,EAAmD;AAAA;AAAA,sEAA8B,IAA9B,CAAnD;AACA,eAAKM,YAAL,CAAkBX,GAAlB,CAAsB;AAAA;AAAA,oDAAiBM,aAAvC,EAAsD;AAAA;AAAA,4EAAiC,IAAjC,CAAtD;AACA,eAAKK,YAAL,CAAkBX,GAAlB,CAAsB;AAAA;AAAA,oDAAiBY,SAAvC,EAAkD;AAAA;AAAA,oEAA6B,IAA7B,CAAlD;AACA,eAAKD,YAAL,CAAkBX,GAAlB,CAAsB;AAAA;AAAA,oDAAiBa,UAAvC,EAAmD;AAAA;AAAA,sEAA8B,IAA9B,CAAnD;AACA,eAAKF,YAAL,CAAkBX,GAAlB,CAAsB;AAAA;AAAA,oDAAiBO,cAAvC,EAAuD;AAAA;AAAA,8EAAkC,IAAlC,CAAvD;AACA,eAAKI,YAAL,CAAkBX,GAAlB,CAAsB;AAAA;AAAA,oDAAiBQ,KAAvC,EAA8C;AAAA;AAAA,4DAAyB,IAAzB,CAA9C;AACA,eAAKG,YAAL,CAAkBX,GAAlB,CAAsB;AAAA;AAAA,oDAAiBS,QAAvC,EAAiD;AAAA;AAAA,kEAA4B,IAA5B,CAAjD;AACA,eAAKE,YAAL,CAAkBX,GAAlB,CAAsB;AAAA;AAAA,oDAAiBU,MAAvC,EAA+C;AAAA;AAAA,8DAA0B,IAA1B,CAA/C;AACH;;AAEDf,QAAAA,iBAAiB,GAAG;AAChB,eAAKJ,YAAL,CAAkBuB,EAAlB,CAAqB7C,SAAS,CAAC8C,SAAV,CAAoBC,QAAzC,EAAmD,MAAM;AACrD,kBAAMC,aAAa,GAAG,KAAK1B,YAAL,CAAkB2B,WAAlB,CAA8BC,IAApD;AACA,kBAAMC,IAAI,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,CAAb;;AAEA,gBAAIA,IAAI,CAACC,IAAL,CAAUC,CAAC,IAAIL,aAAa,CAACM,QAAd,CAAuBD,CAAvB,CAAf,CAAJ,EAA+C;AAC3C;AACA,mBAAKE,IAAL,CAAUC,YAAV;AAAA;AAAA,0CAAkCC,KAAlC,GAA0C;AAAA;AAAA,0DAAkBzB,IAA5D;AACH;AACJ,WARD;AASH;;AAED0B,QAAAA,GAAG,GAAG;AACF,kBAAQ,KAAKC,WAAb;AACI,iBAAK,KAAKjB,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,sDAAiB3B,QAAvC,CAAL;AACA,iBAAK,KAAKS,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,sDAAiB1B,SAAvC,CAAL;AACA,iBAAK,KAAKQ,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,sDAAiBxB,UAAvC,CAAL;AACA,iBAAK,KAAKM,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,sDAAiBvB,aAAvC,CAAL;AACA,iBAAK,KAAKK,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,sDAAiBjB,SAAvC,CAAL;AACA,iBAAK,KAAKD,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,sDAAiBhB,UAAvC,CAAL;AACA,iBAAK,KAAKF,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,sDAAiBrB,KAAvC,CAAL;AACA,iBAAK,KAAKG,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,sDAAiBpB,QAAvC,CAAL;AACA,iBAAK,KAAKE,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,sDAAiBnB,MAAvC,CAAL;AAEA,iBAAK,KAAKC,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,sDAAiB5B,IAAvC,CAAL;AACI,kBAAI,KAAKF,MAAL,CAAY8B,GAAZ,CAAgB;AAAA;AAAA,wDAAiBxB,UAAjC,EAA6CyB,KAAjD,EAAwD;AACpD,qBAAKF,WAAL,GAAmB,KAAKjB,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,0DAAiBxB,UAAvC,CAAnB;AACH,eAFD,MAEO,IAAI,KAAKN,MAAL,CAAY8B,GAAZ,CAAgB;AAAA;AAAA,wDAAiBtB,cAAjC,EAAiDuB,KAArD,EAA4D;AAC/D,qBAAKF,WAAL,GAAmB,KAAKjB,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,0DAAiBtB,cAAvC,CAAnB;AACH,eAFM,MAEA,IAAI,KAAKR,MAAL,CAAY8B,GAAZ,CAAgB;AAAA;AAAA,wDAAiB3B,QAAjC,EAA2C4B,KAA/C,EAAsD;AACzD,qBAAKF,WAAL,GAAmB,KAAKjB,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,0DAAiB3B,QAAvC,CAAnB;AACH,eAFM,MAEA,IAAI,KAAKH,MAAL,CAAY8B,GAAZ,CAAgB;AAAA;AAAA,wDAAiB1B,SAAjC,EAA4C2B,KAAhD,EAAuD;AAC1D,qBAAKF,WAAL,GAAmB,KAAKjB,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,0DAAiB1B,SAAvC,CAAnB;AACH,eAFM,MAEA,IAAI,KAAKJ,MAAL,CAAY8B,GAAZ,CAAgB;AAAA;AAAA,wDAAiBvB,aAAjC,EAAgDwB,KAApD,EAA2D;AAC9D,qBAAKF,WAAL,GAAmB,KAAKjB,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,0DAAiBvB,aAAvC,CAAnB;AACH,eAFM,MAEA,IAAI,KAAKP,MAAL,CAAY8B,GAAZ,CAAgB;AAAA;AAAA,wDAAiBjB,SAAjC,EAA4CkB,KAAhD,EAAuD;AAC1D,qBAAKF,WAAL,GAAmB,KAAKjB,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,0DAAiBjB,SAAvC,CAAnB;AACH,eAFM,MAEA,IAAI,KAAKb,MAAL,CAAY8B,GAAZ,CAAgB;AAAA;AAAA,wDAAiBhB,UAAjC,EAA6CiB,KAAjD,EAAwD;AAC3D,qBAAKF,WAAL,GAAmB,KAAKjB,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,0DAAiBhB,UAAvC,CAAnB;AACH,eAFM,MAGF,IAAI,KAAKd,MAAL,CAAY8B,GAAZ,CAAgB;AAAA;AAAA,wDAAiB5B,IAAjC,EAAuC6B,KAA3C,EAAkD;AACnD,qBAAKF,WAAL,GAAmB,KAAKjB,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,0DAAiB5B,IAAvC,CAAnB;AACH,eAFI,MAEE,IAAI,KAAKF,MAAL,CAAY8B,GAAZ,CAAgB;AAAA;AAAA,wDAAiBrB,KAAjC,EAAwCsB,KAA5C,EAAmD;AACtD,qBAAKF,WAAL,GAAmB,KAAKjB,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,0DAAiBrB,KAAvC,CAAnB;AACH,eAFM,MAEA,IAAI,KAAKT,MAAL,CAAY8B,GAAZ,CAAgB;AAAA;AAAA,wDAAiBpB,QAAjC,EAA2CqB,KAA/C,EAAsD;AACzD,qBAAKF,WAAL,GAAmB,KAAKjB,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,0DAAiBpB,QAAvC,CAAnB;AACH,eAFM,MAEA,IAAI,KAAKV,MAAL,CAAY8B,GAAZ,CAAgB;AAAA;AAAA,wDAAiBnB,MAAjC,EAAyCoB,KAA7C,EAAoD;AACvD,qBAAKF,WAAL,GAAmB,KAAKjB,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,0DAAiBnB,MAAvC,CAAnB;AACH,eAFM,MAGF;AACD,qBAAKkB,WAAL,GAAmB,KAAKA,WAAxB;AACH;;AACD;;AAEJ;AACI,mBAAKA,WAAL,GAAmB,KAAKjB,YAAL,CAAkBkB,GAAlB,CAAsB;AAAA;AAAA,wDAAiB5B,IAAvC,CAAnB;AACA;AA3CR;AA6CH;;AAlGgD,O","sourcesContent":["import { Component, _decorator, Node, AnimationClip, Animation, SpriteFrame, SpriteAtlas } from \"cc\";\nimport { ENUM_EVENT, ENUM_BOTTOM_CONTROLLER, FSM_PARAMS_TYPE_ENUM, PARAMS_NAME_TYPE, ENITIY_TYPE_ENUM, ENTITY_STATE_ENUM } from \"../../Enum\";\nimport AttackSubStateMachine from \"./AttackSubStateMachine\";\nimport BlockFrontSubStateMachine from \"./BlockFrontSubStateMachine\";\nimport BlockTurnLeftSubStateMachine from \"./BlockTurnLeftSubStateMachine\";\nimport BlockTurnRightSubStateMachine from \"./BlockTurnRightSubStateMachine\";\nimport DeathSubStateMachine from \"./DeathSubStateMachine\";\nimport IdleSubStateMachine from \"./IdleSubStateMachine\";\nimport TurnLeftSubStateMachine from \"./TurnLeftSubStateMachine\";\nimport TurnRightSubStateMachine from \"./TurnRightSubStateMachine\";\n// import { DataManager.Instance } from \"../Runtime/DataManager\";\nimport { TileMapManager } from \"../TileMap/TileMapManager\";\nimport { createNewNode } from \"../Utils\";\nimport { EnitiyMgr } from \"../Base/EnitiyMgr\";\nimport { getParamsInitNumber, getParamsInitTrigger, StateMachine } from \"../Base/SateMachine\";\nimport State from \"../Base/State\";\nimport AirDeathSubStateMachine from \"./AirDeathSubStateMachine\";\nimport BlockLeftSubStateMachine from \"./BlockLeftSubStateMachine\";\nimport BlockRightSubStateMachine from \"./BlockRightSubStateMachine\";\n\n\nconst { ccclass, property } = _decorator;\n@ccclass('PlayerStateMachine')\nexport class PlayerStateMachine extends StateMachine {\n    async init() {\n        this.animationCom = this.addComponent(Animation)\n\n        this.initParams()\n        this.initSateMachine()\n        this.addAnimationEvent()\n\n        await Promise.all(this.waitList)\n    }\n\n    initParams() {\n        this.params.set(PARAMS_NAME_TYPE.IDLE, getParamsInitTrigger())\n        this.params.set(PARAMS_NAME_TYPE.TURNLEFT, getParamsInitTrigger())\n        this.params.set(PARAMS_NAME_TYPE.TURNRIGHT, getParamsInitTrigger())\n        this.params.set(PARAMS_NAME_TYPE.DIRECTION, getParamsInitNumber())\n        this.params.set(PARAMS_NAME_TYPE.BLOCKFRONT, getParamsInitTrigger())\n        this.params.set(PARAMS_NAME_TYPE.BLOCKTURNLEFT, getParamsInitTrigger())\n        this.params.set(PARAMS_NAME_TYPE.BLOCKTURNRIGHT, getParamsInitTrigger())\n        this.params.set(PARAMS_NAME_TYPE.DEATH, getParamsInitTrigger())\n        this.params.set(PARAMS_NAME_TYPE.AIRDEATH, getParamsInitTrigger())\n        this.params.set(PARAMS_NAME_TYPE.ATTACK, getParamsInitTrigger())\n    }\n\n    initSateMachine() {\n        // this.stateMachine.set(PARAMS_NAME_TYPE.IDLE, new State(this, 'texture/player/idle/top/idle', AnimationClip.WrapMode.Loop))\n        // this.stateMachine.set(PARAMS_NAME_TYPE.TURNLEFT, new State(this, 'texture/player/turnleft/top/turnleft'))\n        this.stateMachine.set(PARAMS_NAME_TYPE.IDLE, new IdleSubStateMachine(this))\n        this.stateMachine.set(PARAMS_NAME_TYPE.TURNLEFT, new TurnLeftSubStateMachine(this))\n        this.stateMachine.set(PARAMS_NAME_TYPE.TURNRIGHT, new TurnRightSubStateMachine(this))\n        this.stateMachine.set(PARAMS_NAME_TYPE.BLOCKFRONT, new BlockFrontSubStateMachine(this))\n        this.stateMachine.set(PARAMS_NAME_TYPE.BLOCKTURNLEFT, new BlockTurnLeftSubStateMachine(this))\n        this.stateMachine.set(PARAMS_NAME_TYPE.BLOCKLEFT, new BlockLeftSubStateMachine(this))\n        this.stateMachine.set(PARAMS_NAME_TYPE.BLOCKRIGHT, new BlockRightSubStateMachine(this))\n        this.stateMachine.set(PARAMS_NAME_TYPE.BLOCKTURNRIGHT, new BlockTurnRightSubStateMachine(this))\n        this.stateMachine.set(PARAMS_NAME_TYPE.DEATH, new DeathSubStateMachine(this))\n        this.stateMachine.set(PARAMS_NAME_TYPE.AIRDEATH, new AirDeathSubStateMachine(this))\n        this.stateMachine.set(PARAMS_NAME_TYPE.ATTACK, new AttackSubStateMachine(this))\n    }\n\n    addAnimationEvent() {\n        this.animationCom.on(Animation.EventType.FINISHED, () => {\n            const animationName = this.animationCom.defaultClip.name\n            const list = ['block', 'turn', 'attack']\n\n            if (list.some(v => animationName.includes(v))) {\n                // this.setParams(PARAMS_NAME_TYPE.IDLE, true)\n                this.node.getComponent(EnitiyMgr).state = ENTITY_STATE_ENUM.IDLE\n            }\n        })\n    }\n\n    run() {\n        switch (this.currentSate) {\n            case this.stateMachine.get(PARAMS_NAME_TYPE.TURNLEFT):\n            case this.stateMachine.get(PARAMS_NAME_TYPE.TURNRIGHT):\n            case this.stateMachine.get(PARAMS_NAME_TYPE.BLOCKFRONT):\n            case this.stateMachine.get(PARAMS_NAME_TYPE.BLOCKTURNLEFT):\n            case this.stateMachine.get(PARAMS_NAME_TYPE.BLOCKLEFT):\n            case this.stateMachine.get(PARAMS_NAME_TYPE.BLOCKRIGHT):\n            case this.stateMachine.get(PARAMS_NAME_TYPE.DEATH):\n            case this.stateMachine.get(PARAMS_NAME_TYPE.AIRDEATH):\n            case this.stateMachine.get(PARAMS_NAME_TYPE.ATTACK):\n\n            case this.stateMachine.get(PARAMS_NAME_TYPE.IDLE):\n                if (this.params.get(PARAMS_NAME_TYPE.BLOCKFRONT).value) {\n                    this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.BLOCKFRONT)\n                } else if (this.params.get(PARAMS_NAME_TYPE.BLOCKTURNRIGHT).value) {\n                    this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.BLOCKTURNRIGHT)\n                } else if (this.params.get(PARAMS_NAME_TYPE.TURNLEFT).value) {\n                    this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.TURNLEFT)\n                } else if (this.params.get(PARAMS_NAME_TYPE.TURNRIGHT).value) {\n                    this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.TURNRIGHT)\n                } else if (this.params.get(PARAMS_NAME_TYPE.BLOCKTURNLEFT).value) {\n                    this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.BLOCKTURNLEFT)\n                } else if (this.params.get(PARAMS_NAME_TYPE.BLOCKLEFT).value) {\n                    this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.BLOCKLEFT)\n                } else if (this.params.get(PARAMS_NAME_TYPE.BLOCKRIGHT).value) {\n                    this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.BLOCKRIGHT)\n                }\n                else if (this.params.get(PARAMS_NAME_TYPE.IDLE).value) {\n                    this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.IDLE)\n                } else if (this.params.get(PARAMS_NAME_TYPE.DEATH).value) {\n                    this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.DEATH)\n                } else if (this.params.get(PARAMS_NAME_TYPE.AIRDEATH).value) {\n                    this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.AIRDEATH)\n                } else if (this.params.get(PARAMS_NAME_TYPE.ATTACK).value) {\n                    this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.ATTACK)\n                }\n                else {\n                    this.currentSate = this.currentSate\n                }\n                break;\n\n            default:\n                this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.IDLE)\n                break;\n        }\n    }\n}"]}