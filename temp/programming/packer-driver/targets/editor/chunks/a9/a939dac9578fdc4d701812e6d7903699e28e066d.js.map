{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Scripts/Player/PlayerMgr.ts"],"names":["Component","_decorator","Sprite","UITransform","DIRECTION_ORDER_ENUM","ENTITY_STATE_ENUM","ENUM_EVENT","ENUM_MOVE","PARAMS_NAME_TYPE","EventMgr","TILE_HEIGHT","TILE_WIDTH","PlayerStateMachine","MOVE_SPEED","ccclass","property","PlayerMrg","x","y","tartgetX","tartgetY","fsm","_direction","_state","direction","newDirection","setParams","DIRECTION","state","newState","init","sprite","addComponent","sizeMode","SizeMode","CUSTOM","transform","node","getComponent","setContentSize","IDEL","onLoad","Instance","addEventListen","ENUM_MOVE_PLAYER","handlerMove","onDestry","unEventListen","update","updateXY","setPosition","Math","abs","TOP","BOTTOM","LEFT","RIGHT","TURNLEFT","TURNRIGHT"],"mappings":"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","sourcesContent":["import { Component, _decorator, Node, Sprite, UITransform, Animation, SpriteAtlas, AnimationClip, animation, SpriteFrame, Texture2D, math } from \"cc\";\nimport { DIRECTION_ENUM, DIRECTION_ORDER_ENUM, ENTITY_STATE_ENUM, ENUM_EVENT, ENUM_MOVE, PARAMS_NAME_TYPE } from \"../../Enum\";\nimport levels, { ILevel } from \"../../Levels\";\nimport EventMgr from \"../Base/EventMgr\";\nimport ResourceLoadMgr from \"../Base/ResourceLoadMgr\";\nimport DataManager from \"../Runtime/DataManager\";\nimport { TILE_HEIGHT, TILE_WIDTH } from \"../TileMap/TileManager\";\n// import { DataManager.Instance } from \"../Runtime/DataManager\";\nimport { TileMapManager } from \"../TileMap/TileMapManager\";\nimport { createNewNode } from \"../Utils\";\nimport { PlayerStateMachine } from \"./PlayerStateMachine\";\n\nexport const MOVE_SPEED = 1 / 10\n\nconst { ccclass, property } = _decorator;\n@ccclass('PlayerMrg')\nexport class PlayerMrg extends Component {\n    x: number = 0\n    y: number = 0\n\n    tartgetX: number = 0\n    tartgetY: number = 0\n\n    fsm: PlayerStateMachine = null\n\n    private _direction: DIRECTION_ENUM\n    private _state: ENTITY_STATE_ENUM\n\n    get direction() {\n        return this._direction\n    }\n    set direction(newDirection) {\n        this._direction = newDirection\n        this.fsm.setParams(PARAMS_NAME_TYPE.DIRECTION, DIRECTION_ORDER_ENUM[this._direction])\n    }\n\n    get state() {\n        return this._state\n    }\n    set state(newState) {\n        this._state = newState\n        this.fsm.setParams(this.state, true)\n    }\n\n    async init() {\n        const sprite = this.addComponent(Sprite)\n        sprite.sizeMode = Sprite.SizeMode.CUSTOM\n        const transform = this.node.getComponent(UITransform)\n        transform.setContentSize(TILE_WIDTH * 4, TILE_HEIGHT * 4)\n\n        this.fsm = this.addComponent(PlayerStateMachine)\n        await this.fsm.init()\n        // this.fsm.setParams(PARAMS_NAME_TYPE.IDEL, true)\n        this.state = ENTITY_STATE_ENUM.IDEL\n    }\n\n    onLoad() {\n        EventMgr.Instance.addEventListen(ENUM_EVENT.ENUM_MOVE_PLAYER, this.handlerMove, this)\n    }\n\n    onDestry() {\n        EventMgr.Instance.unEventListen(ENUM_EVENT.ENUM_MOVE_PLAYER, this.handlerMove)\n    }\n\n    update() {\n        this.updateXY()\n        this.node.setPosition(this.x * TILE_WIDTH - TILE_WIDTH * 1.5, -this.y * TILE_HEIGHT + TILE_HEIGHT * 1.5)\n    }\n\n    updateXY() {\n        if (this.tartgetX < this.x) {\n            this.x -= MOVE_SPEED\n        } else if (this.tartgetX > this.x) {\n            this.x += MOVE_SPEED\n        } else if (this.tartgetY < this.y) {\n            this.y -= MOVE_SPEED\n        } else if (this.tartgetY > this.y) {\n            this.y += MOVE_SPEED\n        }\n\n        if (Math.abs(this.tartgetX - this.x) <= 0.1 && Math.abs(this.tartgetY - this.y) <= 0.1) {\n            this.x = this.tartgetX\n            this.y = this.tartgetY\n        }\n    }\n\n    handlerMove(direction: ENUM_MOVE) {\n        switch (direction) {\n            case ENUM_MOVE.TOP:\n                this.tartgetY -= 1\n                break;\n            case ENUM_MOVE.BOTTOM:\n                this.tartgetY += 1\n                break;\n            case ENUM_MOVE.LEFT:\n                this.tartgetX -= 1\n                break;\n            case ENUM_MOVE.RIGHT:\n                this.tartgetX += 1\n                break;\n            case ENUM_MOVE.TURNLEFT:\n                // this.fsm.setParams(PARAMS_NAME_TYPE.TURNLEFT, true)\n                this.state = ENTITY_STATE_ENUM.TURNLEFT\n                break;\n            case ENUM_MOVE.TURNRIGHT:\n\n                break;\n\n            default:\n                break;\n        }\n    }\n}"]}