{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Scripts/Spikes/SpikeStateMachine.ts"],"names":["_decorator","Animation","ENITIY_TYPE_SPIKES_ENUM","PARAMS_NAME_TYPE","SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM","getParamsInitNumber","StateMachine","SpikesOneSubStateMachine","ccclass","property","SpikeStateMachine","init","animationCom","addComponent","initParams","initSateMachine","addAnimationEvent","Promise","all","waitList","params","set","SPIKES_CUR_COUNT","SPIKES_TOTAL_COUNT","stateMachine","SPIKES_ONE","run","value","getParams","currentSate","get"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAoBA,MAAAA,U,OAAAA,U;AAAiCC,MAAAA,S,OAAAA,S;;AAC1BC,MAAAA,uB,iBAAAA,uB;AAAyBC,MAAAA,gB,iBAAAA,gB;AAAkBC,MAAAA,gC,iBAAAA,gC;;AAE7DC,MAAAA,mB,iBAAAA,mB;AAAqBC,MAAAA,Y,iBAAAA,Y;;AACvBC,MAAAA,wB;;;;;;;;;AACP;OAGM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;mCAEjBU,iB,WADZF,OAAO,CAAC,mBAAD,C,gBAAR,MACaE,iBADb;AAAA;AAAA,wCACoD;AACtC,cAAJC,IAAI,GAAG;AACT,eAAKC,YAAL,GAAoB,KAAKC,YAAL,CAAkBZ,SAAlB,CAApB;AAEA,eAAKa,UAAL;AACA,eAAKC,eAAL;AACA,eAAKC,iBAAL;AAEA,gBAAMC,OAAO,CAACC,GAAR,CAAY,KAAKC,QAAjB,CAAN;AACH;;AAEDL,QAAAA,UAAU,GAAG;AACT,eAAKM,MAAL,CAAYC,GAAZ,CAAgB;AAAA;AAAA,oDAAiBC,gBAAjC,EAAmD;AAAA;AAAA,2DAAnD;AACA,eAAKF,MAAL,CAAYC,GAAZ,CAAgB;AAAA;AAAA,oDAAiBE,kBAAjC,EAAqD;AAAA;AAAA,2DAArD;AACH;;AAEDR,QAAAA,eAAe,GAAG;AACd,eAAKS,YAAL,CAAkBH,GAAlB,CAAsB;AAAA;AAAA,kEAAwBI,UAA9C,EAA0D;AAAA;AAAA,oEAA6B,IAA7B,CAA1D;AACH;;AAEDT,QAAAA,iBAAiB,GAAG,CAChB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACH;;AAEDU,QAAAA,GAAG,GAAG;AACF,gBAAMC,KAAK,GAAG,KAAKC,SAAL,CAAe;AAAA;AAAA,oDAAiBL,kBAAhC,EAAoDI,KAAlE;;AACA,kBAAQ,KAAKE,WAAb;AACI,iBAAK,KAAKL,YAAL,CAAkBM,GAAlB,CAAsB;AAAA;AAAA,oEAAwBL,UAA9C,CAAL;AACI,kBAAIE,KAAK,KAAK;AAAA;AAAA,wFAAiCF,UAA/C,EAA2D;AACvD,qBAAKI,WAAL,GAAmB,KAAKL,YAAL,CAAkBM,GAAlB,CAAsB;AAAA;AAAA,wEAAwBL,UAA9C,CAAnB;AACH,eAFD,MAGK;AACD,qBAAKI,WAAL,GAAmB,KAAKA,WAAxB;AACH;;AACD;;AAEJ;AACI,mBAAKA,WAAL,GAAmB,KAAKL,YAAL,CAAkBM,GAAlB,CAAsB;AAAA;AAAA,sEAAwBL,UAA9C,CAAnB;AACA;AAZR;AAcH;;AAhD+C,O","sourcesContent":["import { Component, _decorator, Node, AnimationClip, Animation, SpriteFrame, SpriteAtlas } from \"cc\";\nimport { ENITIY_TYPE_ENUM, ENITIY_TYPE_SPIKES_ENUM, PARAMS_NAME_TYPE, SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM } from \"../../Enum\";\nimport { EnitiyMgr } from \"../Base/EnitiyMgr\";\nimport { getParamsInitNumber, StateMachine } from \"../Base/SateMachine\";\nimport SpikesOneSubStateMachine from \"./SpikesOneSubStateMachine\";\n// import { DataManager.Instance } from \"../Runtime/DataManager\";\n\n\nconst { ccclass, property } = _decorator;\n@ccclass('SpikeStateMachine')\nexport class SpikeStateMachine extends StateMachine {\n    async init() {\n        this.animationCom = this.addComponent(Animation)\n\n        this.initParams()\n        this.initSateMachine()\n        this.addAnimationEvent()\n\n        await Promise.all(this.waitList)\n    }\n\n    initParams() {\n        this.params.set(PARAMS_NAME_TYPE.SPIKES_CUR_COUNT, getParamsInitNumber())\n        this.params.set(PARAMS_NAME_TYPE.SPIKES_TOTAL_COUNT, getParamsInitNumber())\n    }\n\n    initSateMachine() {\n        this.stateMachine.set(ENITIY_TYPE_SPIKES_ENUM.SPIKES_ONE, new SpikesOneSubStateMachine(this))\n    }\n\n    addAnimationEvent() {\n        // this.animationCom.on(Animation.EventType.FINISHED, () => {\n        //     const animationName = this.animationCom.defaultClip.name\n        //     const list = ['attack']\n\n        //     if (list.some(v => animationName.includes(v))) {\n        //         // this.setParams(PARAMS_NAME_TYPE.IDLE, true)\n        //         this.node.getComponent(EnitiyMgr).state = ENTITY_STATE_ENUM.IDLE\n        //     }\n        // })\n    }\n\n    run() {\n        const value = this.getParams(PARAMS_NAME_TYPE.SPIKES_TOTAL_COUNT).value\n        switch (this.currentSate) {\n            case this.stateMachine.get(ENITIY_TYPE_SPIKES_ENUM.SPIKES_ONE):\n                if (value === SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM.SPIKES_ONE) {\n                    this.currentSate = this.stateMachine.get(ENITIY_TYPE_SPIKES_ENUM.SPIKES_ONE)\n                }\n                else {\n                    this.currentSate = this.currentSate\n                }\n                break;\n\n            default:\n                this.currentSate = this.stateMachine.get(ENITIY_TYPE_SPIKES_ENUM.SPIKES_ONE)\n                break;\n        }\n    }\n}"]}