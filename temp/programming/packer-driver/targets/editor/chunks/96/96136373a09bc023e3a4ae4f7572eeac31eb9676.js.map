{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Scripts/Player/PlayerStateMachine.ts"],"names":["_decorator","AnimationClip","Animation","PARAMS_NAME_TYPE","getParamsInitValue","StateMachine","State","ccclass","property","PlayerStateMachine","init","animationCom","addComponent","initParams","initSateMachine","addAnimationEvent","Promise","all","waitList","params","set","IDEL","TURNLEFT","stateMachine","WrapMode","Loop","on","EventType","FINISHED","animationName","defaultClip","name","list","some","v","includes","setParams","run","currentSate","get","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAoBA,MAAAA,U,OAAAA,U;AAAkBC,MAAAA,a,OAAAA,a;AAAeC,MAAAA,S,OAAAA,S;;AACCC,MAAAA,gB,iBAAAA,gB;;AAI7CC,MAAAA,kB,iBAAAA,kB;AAAoBC,MAAAA,Y,iBAAAA,Y;;AACtBC,MAAAA,K;;;;;;;;;OAGD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;oCAEjBS,kB,WADZF,OAAO,CAAC,oBAAD,C,gBAAR,MACaE,kBADb;AAAA;AAAA,wCACqD;AACvC,cAAJC,IAAI,GAAG;AACT,eAAKC,YAAL,GAAoB,KAAKC,YAAL,CAAkBV,SAAlB,CAApB;AAEA,eAAKW,UAAL;AACA,eAAKC,eAAL;AACA,eAAKC,iBAAL;AAEA,gBAAMC,OAAO,CAACC,GAAR,CAAY,KAAKC,QAAjB,CAAN;AACH;;AAEDL,QAAAA,UAAU,GAAG;AACT,eAAKM,MAAL,CAAYC,GAAZ,CAAgB;AAAA;AAAA,oDAAiBC,IAAjC,EAAuC;AAAA;AAAA,yDAAvC;AACA,eAAKF,MAAL,CAAYC,GAAZ,CAAgB;AAAA;AAAA,oDAAiBE,QAAjC,EAA2C;AAAA;AAAA,yDAA3C;AACH;;AAEDR,QAAAA,eAAe,GAAG;AACd,eAAKS,YAAL,CAAkBH,GAAlB,CAAsB;AAAA;AAAA,oDAAiBC,IAAvC,EAA6C;AAAA;AAAA,8BAAU,IAAV,EAAgB,8BAAhB,EAAgDpB,aAAa,CAACuB,QAAd,CAAuBC,IAAvE,CAA7C;AACA,eAAKF,YAAL,CAAkBH,GAAlB,CAAsB;AAAA;AAAA,oDAAiBE,QAAvC,EAAiD;AAAA;AAAA,8BAAU,IAAV,EAAgB,sCAAhB,CAAjD;AACH;;AAEDP,QAAAA,iBAAiB,GAAG;AAChB,eAAKJ,YAAL,CAAkBe,EAAlB,CAAqBxB,SAAS,CAACyB,SAAV,CAAoBC,QAAzC,EAAmD,MAAM;AACrD,kBAAMC,aAAa,GAAG,KAAKlB,YAAL,CAAkBmB,WAAlB,CAA8BC,IAApD;AACA,kBAAMC,IAAI,GAAG,CAAC,MAAD,CAAb;;AAEA,gBAAIA,IAAI,CAACC,IAAL,CAAUC,CAAC,IAAIL,aAAa,CAACM,QAAd,CAAuBD,CAAvB,CAAf,CAAJ,EAA+C;AAC3C,mBAAKE,SAAL,CAAe;AAAA;AAAA,wDAAiBf,IAAhC,EAAsC,IAAtC;AACH;AACJ,WAPD;AAQH;;AAEDgB,QAAAA,GAAG,GAAG;AACF,kBAAQ,KAAKC,WAAb;AACI,iBAAK,KAAKf,YAAL,CAAkBgB,GAAlB,CAAsB;AAAA;AAAA,sDAAiBjB,QAAvC,CAAL;AAEA,iBAAK,KAAKC,YAAL,CAAkBgB,GAAlB,CAAsB;AAAA;AAAA,sDAAiBlB,IAAvC,CAAL;AACI,kBAAI,KAAKF,MAAL,CAAYoB,GAAZ,CAAgB;AAAA;AAAA,wDAAiBjB,QAAjC,EAA2CkB,KAA/C,EAAsD;AAClD,qBAAKF,WAAL,GAAmB,KAAKf,YAAL,CAAkBgB,GAAlB,CAAsB;AAAA;AAAA,0DAAiBjB,QAAvC,CAAnB;AACH,eAFD,MAEO,IAAI,KAAKH,MAAL,CAAYoB,GAAZ,CAAgB;AAAA;AAAA,wDAAiBlB,IAAjC,EAAuCmB,KAA3C,EAAkD;AACrD,qBAAKF,WAAL,GAAmB,KAAKf,YAAL,CAAkBgB,GAAlB,CAAsB;AAAA;AAAA,0DAAiBlB,IAAvC,CAAnB;AACH;;AACD;;AAEJ;AACI,mBAAKiB,WAAL,GAAmB,KAAKf,YAAL,CAAkBgB,GAAlB,CAAsB;AAAA;AAAA,wDAAiBlB,IAAvC,CAAnB;AACA;AAbR;AAeH;;AAhDgD,O","sourcesContent":["import { Component, _decorator, Node, AnimationClip, Animation, SpriteFrame, SpriteAtlas } from \"cc\";\nimport { ENUM_EVENT, ENUM_MOVE, FSM_PARAMS_TYPE_ENUM, PARAMS_NAME_TYPE } from \"../../Enum\";\n// import { DataManager.Instance } from \"../Runtime/DataManager\";\nimport { TileMapManager } from \"../TileMap/TileMapManager\";\nimport { createNewNode } from \"../Utils\";\nimport { getParamsInitValue, StateMachine } from \"./SateMachine\";\nimport State from \"./State\";\n\n\nconst { ccclass, property } = _decorator;\n@ccclass('PlayerStateMachine')\nexport class PlayerStateMachine extends StateMachine {\n    async init() {\n        this.animationCom = this.addComponent(Animation)\n\n        this.initParams()\n        this.initSateMachine()\n        this.addAnimationEvent()\n\n        await Promise.all(this.waitList)\n    }\n\n    initParams() {\n        this.params.set(PARAMS_NAME_TYPE.IDEL, getParamsInitValue())\n        this.params.set(PARAMS_NAME_TYPE.TURNLEFT, getParamsInitValue())\n    }\n\n    initSateMachine() {\n        this.stateMachine.set(PARAMS_NAME_TYPE.IDEL, new State(this, 'texture/player/idle/top/idle', AnimationClip.WrapMode.Loop))\n        this.stateMachine.set(PARAMS_NAME_TYPE.TURNLEFT, new State(this, 'texture/player/turnleft/top/turnleft'))\n    }\n\n    addAnimationEvent() {\n        this.animationCom.on(Animation.EventType.FINISHED, () => {\n            const animationName = this.animationCom.defaultClip.name\n            const list = ['turn']\n\n            if (list.some(v => animationName.includes(v))) {\n                this.setParams(PARAMS_NAME_TYPE.IDEL, true)\n            }\n        })\n    }\n\n    run() {\n        switch (this.currentSate) {\n            case this.stateMachine.get(PARAMS_NAME_TYPE.TURNLEFT):\n\n            case this.stateMachine.get(PARAMS_NAME_TYPE.IDEL):\n                if (this.params.get(PARAMS_NAME_TYPE.TURNLEFT).value) {\n                    this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.TURNLEFT)\n                } else if (this.params.get(PARAMS_NAME_TYPE.IDEL).value) {\n                    this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.IDEL)\n                }\n                break;\n\n            default:\n                this.currentSate = this.stateMachine.get(PARAMS_NAME_TYPE.IDEL)\n                break;\n        }\n    }\n}"]}