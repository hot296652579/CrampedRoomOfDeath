{"version":3,"sources":["file:///Users/super_javan/cocoscreator/CrampedRoomOfDeathDungeon/assets/Scripts/Runtime/DataManager.ts"],"names":["DataManager","Singleton","mapInfo","tileMgrInfo","mapRowCount","mapColumCount","levelIndex","playerInfo","doorInfo","enemies","bursts","spikes","smokes","records","Instance","getInstance","reset"],"mappings":";;;yCAYqBA,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAVdC,MAAAA,S;;;;;;;yBAUcD,W,GAAN,MAAMA,WAAN;AAAA;AAAA,kCAAoC;AAAA;AAAA;AAAA,eAC/CE,OAD+C;AAAA,eAE/CC,WAF+C;AAAA,eAG/CC,WAH+C,GAGzB,CAHyB;AAAA,eAI/CC,aAJ+C,GAIvB,CAJuB;AAAA,eAK/CC,UAL+C,GAK1B,CAL0B;AAAA,eAM/CC,UAN+C,GAMvB,IANuB;AAAA,eAO/CC,QAP+C,GAO3B,IAP2B;AAAA,eAQ/CC,OAR+C;AAAA,eAS/CC,MAT+C;AAAA,eAU/CC,MAV+C;AAAA,eAW/CC,MAX+C;AAAA,eAY/CC,OAZ+C,GAY1B,EAZ0B;AAAA;;AAc5B,mBAARC,QAAQ,GAAG;AAClB;AACA,iBAAO,MAAMC,WAAN,EAAP;AACH;;AAEDC,QAAAA,KAAK,GAAG;AACJ,eAAKd,OAAL,GAAe,EAAf;AACA,eAAKC,WAAL,GAAmB,EAAnB;AACA,eAAKI,UAAL,GAAkB,IAAlB;AACA,eAAKC,QAAL,GAAgB,IAAhB;AACA,eAAKC,OAAL,GAAe,EAAf;AACA,eAAKC,MAAL,GAAc,EAAd;AACA,eAAKC,MAAL,GAAc,EAAd;AACA,eAAKC,MAAL,GAAc,EAAd;AAEA,eAAKR,WAAL,GAAmB,CAAnB;AACA,eAAKC,aAAL,GAAqB,CAArB;AACH;;AA/B8C,O,GAkCnD","sourcesContent":["import { IEnitiy, ILevel, ITitle } from \"../../Levels\"\nimport { EnemyMgr } from \"../Base/EnemyMgr\"\nimport Singleton from \"../Base/Singleton\"\nimport { BurstMgr } from \"../Burst/BurstMgr\"\nimport { DoorMgr } from \"../Door/DoorMgr\"\nimport { PlayerMrg } from \"../Player/PlayerMgr\"\nimport { SmokeMgr } from \"../Smoke/SmokeMgr\"\nimport { SpikesMgr } from \"../Spikes/SpikesMgr\"\nimport { TileManager } from \"../TileMap/TileManager\"\n\nexport type IRecord = Omit<ILevel, 'mapInfo'>\n\nexport default class DataManager extends Singleton {\n    mapInfo: Array<Array<ITitle>>\n    tileMgrInfo: Array<Array<TileManager>>\n    mapRowCount: number = 0\n    mapColumCount: number = 0\n    levelIndex: number = 1\n    playerInfo: PlayerMrg = null\n    doorInfo: DoorMgr = null\n    enemies: EnemyMgr[]\n    bursts: BurstMgr[]\n    spikes: SpikesMgr[]\n    smokes: SmokeMgr[]\n    records: IRecord[] = []\n\n    static get Instance() {\n        // super()\n        return super.getInstance<DataManager>()\n    }\n\n    reset() {\n        this.mapInfo = []\n        this.tileMgrInfo = []\n        this.playerInfo = null\n        this.doorInfo = null\n        this.enemies = []\n        this.bursts = []\n        this.spikes = []\n        this.smokes = []\n\n        this.mapRowCount = 0\n        this.mapColumCount = 0\n    }\n}\n\n// export const DataManagerInstance = new DataManager()"]}